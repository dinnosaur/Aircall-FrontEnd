"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shouldForwardProp = exports.makeCheckboxSize = exports.makeCheckboxIndicatorSize = exports.makeCheckboxIndicatorColor = exports.makeCheckboxColor = void 0;

var _styledComponents = require("styled-components");

// Props that should not be forwarded to the HTML DOM elements
var shouldForwardProp = function shouldForwardProp(prop, defaultValidationFn) {
  return !['disabled'].includes(prop) && defaultValidationFn(prop);
};
/**
 * Defines the checkbox size according to the size property.
 * Check this figma link for more details: https://www.figma.com/file/2D5oejKfR6yZJ3Qh6ZHgmu/00.-Tractor---Foundation?node-id=615%3A203
 */


exports.shouldForwardProp = shouldForwardProp;

var makeCheckboxSize = function makeCheckboxSize(_ref) {
  var checkboxSize = _ref.checkboxSize,
      theme = _ref.theme;
  return theme.checkbox.sizes[checkboxSize];
};

exports.makeCheckboxSize = makeCheckboxSize;

var makeCheckboxColor = function makeCheckboxColor(_ref2) {
  var checked = _ref2.checked,
      disabled = _ref2.disabled,
      theme = _ref2.theme,
      error = _ref2.error;

  if (disabled && checked) {
    return (0, _styledComponents.css)(["background-color:", ";&::after{background:", ";}"], theme.colors.grey.base, theme.colors.grey.base);
  }

  if (disabled) {
    return (0, _styledComponents.css)(["background-color:", ";&::after{background:", ";}"], theme.colors.grey.base, theme.colors.grey.light);
  }

  if (error) {
    return (0, _styledComponents.css)(["background-color:", ";&::after{background:", ";}&:hover{&::after{background:", ";}}&:focus-within{background-color:", ";&::after{background:", ";}}"], theme.colors.red.dark, theme.colors.base.white, theme.colors.red.lighter, theme.colors.red.darker, theme.colors.base.white);
  }

  if (checked) {
    return (0, _styledComponents.css)(["background-color:", ";&::after{background:", ";}&:hover{background-color:", ";&::after{background-color:", ";}}&:focus-within{background-color:", ";&::after{background:", ";}}"], theme.colors.primary.base, theme.colors.primary.base, theme.colors.primary.dark, theme.colors.primary.dark, theme.colors.primary.dark, theme.colors.primary.base);
  }

  return (0, _styledComponents.css)(["background-color:", ";&::after{background:", ";}&:hover{background-color:", ";&::after{background:", ";}}&:focus-within{background-color:", ";&::after{background:", ";}}"], theme.colors.grey.base, theme.colors.base.white, theme.colors.grey.base, theme.colors.grey.lighter, theme.colors.primary.base, theme.colors.base.white);
};

exports.makeCheckboxColor = makeCheckboxColor;

var makeCheckboxIndicatorSize = function makeCheckboxIndicatorSize(_ref3) {
  var size = _ref3.size,
      checked = _ref3.checked,
      theme = _ref3.theme;

  if (!checked) {
    return null;
  }

  var circleSize = theme.checkbox.circleSizes[size];
  return (0, _styledComponents.css)(["", ""], circleSize);
};

exports.makeCheckboxIndicatorSize = makeCheckboxIndicatorSize;

var makeCheckboxIndicatorColor = function makeCheckboxIndicatorColor(_ref4) {
  var checked = _ref4.checked,
      disabled = _ref4.disabled,
      error = _ref4.error,
      theme = _ref4.theme;

  if (!checked) {
    return null;
  }

  if (disabled) {
    return (0, _styledComponents.css)(["background-color:", ";"], theme.colors.grey.light);
  }

  if (error) {
    return (0, _styledComponents.css)(["background-color:", ";"], theme.colors.red.dark);
  }

  return (0, _styledComponents.css)(["background-color:", ";"], theme.colors.base.white);
};

exports.makeCheckboxIndicatorColor = makeCheckboxIndicatorColor;