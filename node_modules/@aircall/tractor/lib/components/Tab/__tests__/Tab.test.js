"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _ = require("..");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

describe('Tab', function () {
  it('should switch from one tab to another and manage the active tab state outside Tab component', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
    var id, _render, rerender;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            id = 1;
            _render = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_.Tab.Container, {
              activeTabId: id,
              onChange: function onChange(i) {
                return id = i;
              }
            }, /*#__PURE__*/_react["default"].createElement(_.Tab.Menu, null, /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 1
            }, "Tab 1"), /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 2
            }, "Tab 2")), /*#__PURE__*/_react["default"].createElement(_.Tab.Content, null, /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 1
            }, "Tab 1 content"), /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 2
            }, "Tab 2 content"))))), rerender = _render.rerender;
            expect(_react2.screen.getByText('Tab 1 content')).toBeInTheDocument();
            expect(_react2.screen.queryByText('Tab 2 content')).not.toBeInTheDocument(); // Click on a tab button

            _react2.fireEvent.click(_react2.screen.getByText('Tab 2')); // rerender the component


            rerender( /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_.Tab.Container, {
              activeTabId: id,
              onChange: function onChange(i) {
                return id = i;
              }
            }, /*#__PURE__*/_react["default"].createElement(_.Tab.Menu, null, /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 1
            }, "Tab 1"), /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 2
            }, "Tab 2")), /*#__PURE__*/_react["default"].createElement(_.Tab.Content, null, /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 1
            }, "Tab 1 content"), /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 2
            }, "Tab 2 content")))));
            _context.next = 8;
            return (0, _react2.waitFor)(function () {
              return expect(_react2.screen.queryByText('Tab 1 content')).not.toBeInTheDocument();
            });

          case 8:
            expect(_react2.screen.getByText('Tab 2 content')).toBeInTheDocument();

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  it('should switch from one tab to another and manage the active tab state inside Tab component', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            (0, _react2.render)( /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_.Tab.Container, {
              defaultActiveTabId: 1
            }, /*#__PURE__*/_react["default"].createElement(_.Tab.Menu, null, /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 1
            }, "Tab 1"), /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 2
            }, "Tab 2")), /*#__PURE__*/_react["default"].createElement(_.Tab.Content, null, /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 1
            }, "Tab 1 content"), /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 2
            }, "Tab 2 content")))));
            expect(_react2.screen.getByText('Tab 1 content')).toBeInTheDocument();
            expect(_react2.screen.queryByText('Tab 2 content')).not.toBeInTheDocument(); // Click on a tab button

            _react2.fireEvent.click(_react2.screen.getByText('Tab 2'));

            _context2.next = 6;
            return (0, _react2.waitFor)(function () {
              return expect(_react2.screen.queryByText('Tab 1 content')).not.toBeInTheDocument();
            });

          case 6:
            expect(_react2.screen.getByText('Tab 2 content')).toBeInTheDocument();

          case 7:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
  it('should be able to take a menu variant prop', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
    var id;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            id = 1;
            (0, _react2.render)( /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_.Tab.Container, {
              activeTabId: id,
              onChange: function onChange(i) {
                return id = i;
              }
            }, /*#__PURE__*/_react["default"].createElement(_.Tab.Menu, {
              variant: "evenly-sized"
            }, /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 1
            }, "Tab 1"), /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 2
            }, "Tab 2")), /*#__PURE__*/_react["default"].createElement(_.Tab.Content, null, /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 1
            }, "Tab 1 content"), /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 2
            }, "Tab 2 content")))));
            expect(_react2.screen.getByTestId('tab-menu')).toBeInTheDocument();

          case 3:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  })));
  it('should be able to take a menu space prop', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
    var id;
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            id = 1;
            (0, _react2.render)( /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_.Tab.Container, {
              activeTabId: id,
              onChange: function onChange(i) {
                return id = i;
              }
            }, /*#__PURE__*/_react["default"].createElement(_.Tab.Menu, {
              space: "m"
            }, /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 1
            }, "Tab 1"), /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 2
            }, "Tab 2")), /*#__PURE__*/_react["default"].createElement(_.Tab.Content, null, /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 1
            }, "Tab 1 content"), /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 2
            }, "Tab 2 content")))));
            expect(_react2.screen.getByTestId('tab-menu')).toBeInTheDocument();

          case 3:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  })));
  it('should be able to take a menu item activeTabColor prop', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
    var id;
    return regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            id = 1;
            (0, _react2.render)( /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_.Tab.Container, {
              activeTabId: id,
              onChange: function onChange(i) {
                return id = i;
              }
            }, /*#__PURE__*/_react["default"].createElement(_.Tab.Menu, null, /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              activeTabColor: "green",
              id: 1
            }, "Tab 1"), /*#__PURE__*/_react["default"].createElement(_.Tab.MenuItem, {
              id: 2
            }, "Tab 2")), /*#__PURE__*/_react["default"].createElement(_.Tab.Content, null, /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 1
            }, "Tab 1 content"), /*#__PURE__*/_react["default"].createElement(_.Tab.Item, {
              id: 2
            }, "Tab 2 content")))));
            expect(_react2.screen.getByTestId('tab-menu')).toBeInTheDocument();

          case 3:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  })));
});