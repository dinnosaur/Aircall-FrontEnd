"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabMenuItem = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledSystem = require("styled-system");

var _ = require("..");

var _context = require("./context");

var _excluded = ["children", "activeTabColor", "id"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var activeTabColor = (0, _styledSystem.system)({
  activeTabColor: {
    property: 'color',
    scale: 'colors'
  }
});
var activeTabUnderlineColor = (0, _styledSystem.system)({
  activeTabColor: {
    property: 'background',
    scale: 'colors'
  }
});
var TabMenuItemWrapper = (0, _styledComponents["default"])(_.Flex).attrs({
  py: 's'
}).withConfig({
  displayName: "TabMenuItem__TabMenuItemWrapper",
  componentId: "sc-1428gl2-0"
})(["", " position:relative;flex-shrink:0;align-items:center;justify-content:center;cursor:pointer;", ";transition:font-weight 0.25s ease;&::after{content:'';position:absolute;right:0;bottom:0;left:0;height:4px;border-radius:", ";opacity:", ";transition:opacity 0.25s ease;", ";}"], activeTabColor, function (_ref) {
  var isActive = _ref.isActive,
      theme = _ref.theme;
  return isActive ? theme.typography.variants.body : theme.typography.variants.body2;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.radii[8] + " " + theme.radii[8] + " 0 0";
}, function (_ref3) {
  var isActive = _ref3.isActive;
  return isActive ? 1 : 0;
}, activeTabUnderlineColor);
var TabMenuItem = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function (_ref4, ref) {
  var children = _ref4.children,
      _ref4$activeTabColor = _ref4.activeTabColor,
      activeTabColor = _ref4$activeTabColor === void 0 ? 'text.base' : _ref4$activeTabColor,
      id = _ref4.id,
      styleProps = _objectWithoutPropertiesLoose(_ref4, _excluded);

  var _useContext = (0, _react.useContext)(_context.TabContext),
      activeTabId = _useContext.activeTabId,
      onTabClick = _useContext.onTabClick;

  var isActive = activeTabId === id;
  var handleClick = (0, _react.useCallback)(function () {
    onTabClick(id);
  }, [onTabClick, id]);
  return /*#__PURE__*/_react["default"].createElement(TabMenuItemWrapper, _extends({
    ref: ref,
    isActive: isActive,
    onClick: handleClick,
    activeTabColor: isActive ? activeTabColor : undefined,
    "data-test": "tab-menu-item-" + id
  }, styleProps), children);
}));
exports.TabMenuItem = TabMenuItem;
TabMenuItem.displayName = 'Tab.MenuItem';