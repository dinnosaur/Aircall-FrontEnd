"use strict";

var _react = _interopRequireDefault(require("react"));

var _testUtils = require("test-utils");

var _Menu = require("../Menu");

var _MenuItem = require("../MenuItem");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

jest.mock('../../../utils/dom');
afterEach(_testUtils.cleanup);
/**
 * More of a placeholder for now, until more functionality is added
 */

describe('Menu', function () {
  describe('Dimensions', function () {
    it('should render with a fixed with', function () {
      var DTI = 'menu';
      var WIDTH = 67;
      var LABEL = 'Hello, World!';

      var _render = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_Menu.Menu, {
        width: WIDTH,
        "data-test": DTI
      }, /*#__PURE__*/_react["default"].createElement(_MenuItem.MenuItem, null, LABEL))),
          getByTestId = _render.getByTestId;

      expect(getByTestId(DTI)).toHaveStyle("width: " + WIDTH + "px;");
    });
  });
  describe('Children', function () {
    it('should render one menu item', function () {
      var TITLE = 'Hello';

      var _render2 = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_Menu.Menu, null, /*#__PURE__*/_react["default"].createElement(_MenuItem.MenuItem, null, TITLE))),
          queryByText = _render2.queryByText;

      expect(queryByText(TITLE)).toBeInTheDocument();
    });
    it('should render multiple menu item', function () {
      var A = 'Hello';
      var B = 'World';
      var C = '!?!';

      var _render3 = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_Menu.Menu, null, /*#__PURE__*/_react["default"].createElement(_MenuItem.MenuItem, null, A), /*#__PURE__*/_react["default"].createElement(_MenuItem.MenuItem, null, B), /*#__PURE__*/_react["default"].createElement(_MenuItem.MenuItem, null, C))),
          queryByText = _render3.queryByText;

      expect(queryByText(A)).toBeInTheDocument();
      expect(queryByText(B)).toBeInTheDocument();
      expect(queryByText(C)).toBeInTheDocument();
    });
  });
});