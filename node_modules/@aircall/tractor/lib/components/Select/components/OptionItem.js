"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OptionItem = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ = require("../..");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var OptionItemContainer = (0, _styledComponents["default"])(_.Flex).attrs(function () {
  return {
    px: 's'
  };
}).withConfig({
  displayName: "OptionItem__OptionItemContainer",
  componentId: "sc-1m1gupy-0"
})(["&:hover,&:focus{background-color:", ";}text-align:left;&:active{background-color:", ";}cursor:pointer;align-items:center;height:", ";"], function (_ref) {
  var theme = _ref.theme;
  return theme.colors.grey.lighter;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.colors.grey.light;
}, function (_ref3) {
  var theme = _ref3.theme,
      size = _ref3.size;
  return theme.select.optionSizes[size].height;
});

var OptionItem = function OptionItem(_ref4) {
  var isMulti = _ref4.isMulti,
      option = _ref4.option,
      isSelected = _ref4.isSelected,
      onSelect = _ref4.onSelect,
      OptionComponent = _ref4.optionComponent,
      getOptionLabel = _ref4.getOptionLabel,
      size = _ref4.size;
  var displayLabel = (0, _utils.optionLabel)(option, getOptionLabel);
  var onItemClick = (0, _react.useCallback)(function () {
    onSelect(option);
  }, [onSelect, option]);
  return /*#__PURE__*/_react["default"].createElement(OptionItemContainer, {
    onClick: onItemClick,
    size: size,
    "data-test": "select-option-item",
    "data-selected": isSelected
  }, isMulti && /*#__PURE__*/_react["default"].createElement(_.Checkbox, {
    checked: isSelected,
    mr: "xxs",
    readOnly: true
  }), OptionComponent && /*#__PURE__*/_react["default"].createElement(OptionComponent, option) || /*#__PURE__*/_react["default"].createElement(_.Typography, {
    ellipsis: true,
    variant: "body2"
  }, displayLabel), isSelected && !isMulti && /*#__PURE__*/_react["default"].createElement(_.Box, {
    ml: "auto",
    pl: "xxs"
  }, /*#__PURE__*/_react["default"].createElement(_.TickOutlined, {
    color: "primary.base"
  })));
};

exports.OptionItem = OptionItem;