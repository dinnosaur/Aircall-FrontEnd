"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchInput = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ = require("../..");

var _styled = require("./styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var SearchInput = function SearchInput(_ref) {
  var onChange = _ref.onChange,
      value = _ref.value,
      dropdownPosition = _ref.dropdownPosition,
      size = _ref.size;
  var onClear = (0, _react.useCallback)(function () {
    onChange('');
  }, [onChange]);
  var onValueChange = (0, _react.useCallback)(function (event) {
    onChange(event.target.value);
  }, [onChange]);
  return /*#__PURE__*/_react["default"].createElement(_styled.CustomInput, {
    "data-test": "select-search-input",
    dropdownPosition: dropdownPosition,
    value: value,
    variant: "list",
    autoFocus: true,
    onChange: onValueChange,
    onClear: value ? onClear : undefined,
    icon: _.SearchOutlined,
    size: size
  });
};

exports.SearchInput = SearchInput;