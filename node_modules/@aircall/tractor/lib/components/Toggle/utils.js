"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeToggleSize = exports.makeToggleColor = void 0;

var _styledComponents = require("styled-components");

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * Defines the toggle size according to the size property.
 * Check this figma link for more details: https://www.figma.com/file/2D5oejKfR6yZJ3Qh6ZHgmu/00.-Tractor---Foundation-(WIP)?node-id=615%3A296
 */
var makeToggleSize = function makeToggleSize(_ref) {
  var size = _ref.size,
      checked = _ref.checked,
      theme = _ref.theme;
  var toggleSize = theme.toggle.sizes[size];
  var circleSize = theme.toggle.circleSizes[size];
  return _extends({}, toggleSize, {
    ':after': _extends({}, circleSize, {
      left: checked ? "calc(100% - " + circleSize.width + " - " + toggleSize.padding + ")" : toggleSize.padding
    })
  });
};

exports.makeToggleSize = makeToggleSize;

var makeToggleColor = function makeToggleColor(_ref2) {
  var checked = _ref2.checked,
      disabled = _ref2.disabled,
      theme = _ref2.theme,
      error = _ref2.error;

  if (disabled) {
    return (0, _styledComponents.css)(["background-color:", ";:after{background-color:", ";}"], theme.colors.grey.base, theme.colors.grey.light);
  }

  if (error) {
    return (0, _styledComponents.css)(["background-color:", ";:after{background-color:", ";}:hover{background-color:", ";}:focus-within{border-color:", ";}"], theme.colors.red.dark, theme.colors.base.white, theme.colors.red.darker, theme.colors.red.darker);
  }

  if (checked) {
    return (0, _styledComponents.css)(["background-color:", ";:after{background-color:", ";}:hover{background-color:", ";}:focus-within{border-color:", ";}"], theme.colors.primary.base, theme.colors.base.white, theme.colors.primary.dark, theme.colors.primary.dark);
  }

  return (0, _styledComponents.css)(["background-color:", ";:after{background-color:", ";}:hover{background-color:", ";}:focus{border-color:", ";}"], theme.colors.grey.base, theme.colors.base.white, theme.colors.grey.darker, theme.colors.primary.base);
};

exports.makeToggleColor = makeToggleColor;