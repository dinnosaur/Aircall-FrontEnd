"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToastList = void 0;

var _react = _interopRequireDefault(require("react"));

var _framerMotion = require("framer-motion");

var _Box = require("../Box");

var _ToastContext = require("./ToastContext");

var _ToastItem = require("./ToastItem");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var ToastList = function ToastList() {
  var _useToastConfig = (0, _ToastContext.useToastConfig)(),
      takeContainerWidth = _useToastConfig.takeContainerWidth,
      position = _useToastConfig.position;

  var _useToast = (0, _ToastContext.useToast)(),
      toasts = _useToast.toasts,
      removeToast = _useToast.removeToast;

  return /*#__PURE__*/_react["default"].createElement(_Box.Box, {
    "data-test": "toast-list",
    position: position,
    top: 2,
    left: takeContainerWidth ? 2 : 'auto',
    right: 2,
    zIndex: 1009
  }, /*#__PURE__*/_react["default"].createElement(_framerMotion.AnimatePresence, null, toasts.map(function (toast) {
    return /*#__PURE__*/_react["default"].createElement(_framerMotion.motion.div, {
      key: toast.id,
      layout: true,
      initial: "hide",
      animate: "show",
      exit: "hide",
      transition: {
        ease: [0, 0, 0, 1],
        duration: 0.3
      },
      variants: {
        hide: {
          opacity: 0,
          y: -50
        },
        show: {
          opacity: 1,
          y: 0
        }
      }
    }, /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, _extends({}, toast, {
      onDismiss: function onDismiss() {
        return removeToast(toast.id);
      },
      takeContainerWidth: takeContainerWidth
    })));
  })));
};

exports.ToastList = ToastList;