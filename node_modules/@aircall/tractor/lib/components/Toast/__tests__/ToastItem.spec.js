"use strict";

var _react = _interopRequireDefault(require("react"));

var _testUtils = require("../../../tests/test-utils");

var _ToastItem = require("../ToastItem");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('ToastItem', function () {
  it('should render without icon and action', function () {
    var onDismiss = jest.fn();

    var _render = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      dismissIn: 3000,
      variant: "instructive",
      onDismiss: onDismiss,
      message: "message"
    })),
        getByTestId = _render.getByTestId,
        queryByTestId = _render.queryByTestId;

    var closeButton = getByTestId('toast-close');

    _testUtils.fireEvent.click(closeButton);

    expect(queryByTestId('toast-icon')).toBeNull();
    expect(queryByTestId('toast-action')).toBeNull();
    expect(onDismiss).toHaveBeenCalled();
  });
  it('should render without action', function () {
    var onDismiss = jest.fn();

    var _render2 = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      icon: /*#__PURE__*/_react["default"].createElement("h1", null, "hello"),
      dismissIn: 3000,
      variant: "instructive",
      onDismiss: onDismiss,
      message: "message"
    })),
        getByTestId = _render2.getByTestId,
        queryByTestId = _render2.queryByTestId;

    var closeButton = getByTestId('toast-close');

    _testUtils.fireEvent.click(closeButton);

    expect(queryByTestId('toast-icon')).toBeInTheDocument();
    expect(queryByTestId('toast-action')).toBeNull();
    expect(onDismiss).toHaveBeenCalled();
  });
  it('should render without close button', function () {
    var onDismiss = jest.fn();

    var _render3 = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      dismissIn: 3000,
      variant: "instructive",
      onDismiss: onDismiss,
      message: "message",
      action: "Undo"
    })),
        getByText = _render3.getByText,
        queryByTestId = _render3.queryByTestId;

    expect(queryByTestId('toast-close')).toBeNull();
    expect(queryByTestId('toast-icon')).toBeNull();
    expect(getByText('Undo')).toBeInTheDocument();
  });
  it('should trigger the onAction', function () {
    var onAction = jest.fn();
    var onDismiss = jest.fn();

    var _render4 = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      icon: /*#__PURE__*/_react["default"].createElement("h1", null, "hello"),
      dismissIn: 3000,
      variant: "instructive",
      onDismiss: onDismiss,
      message: "message",
      onAction: onAction,
      action: "Undo"
    })),
        getByText = _render4.getByText;

    var actionButton = getByText('Undo');

    _testUtils.fireEvent.click(actionButton);

    expect(onAction).toHaveBeenCalledWith(onDismiss);
  });
  it('should trigger onDismiss', function () {
    var onDismiss = jest.fn();

    var _render5 = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      icon: /*#__PURE__*/_react["default"].createElement("h1", null, "hello"),
      dismissIn: 3000,
      variant: "instructive",
      onDismiss: onDismiss,
      message: "message"
    })),
        getByTestId = _render5.getByTestId;

    var closeButton = getByTestId('toast-close');

    _testUtils.fireEvent.click(closeButton);

    expect(onDismiss).toHaveBeenCalled();
  });
  it('should trigger the onClick', function () {
    var onClick = jest.fn();
    var onDismiss = jest.fn();

    var _render6 = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      icon: /*#__PURE__*/_react["default"].createElement("h1", null, "hello"),
      dismissIn: 3000,
      variant: "instructive",
      onDismiss: onDismiss,
      message: "message",
      onClick: onClick
    })),
        getByTestId = _render6.getByTestId;

    var bodyToast = getByTestId('toast-instructive');

    _testUtils.fireEvent.click(bodyToast);

    expect(onClick).toHaveBeenCalledWith(onDismiss);
  });
  it('should render the appropriate icon', function () {
    var onDismiss = jest.fn();

    var _render7 = (0, _testUtils.render)( /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      icon: true,
      variant: "primary",
      onDismiss: onDismiss,
      message: "message"
    }), /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      icon: true,
      variant: "instructive",
      onDismiss: onDismiss,
      message: "message"
    }), /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      icon: true,
      variant: "destructive",
      onDismiss: onDismiss,
      message: "message"
    }), /*#__PURE__*/_react["default"].createElement(_ToastItem.ToastItem, {
      icon: true,
      variant: "warning",
      onDismiss: onDismiss,
      message: "message"
    }))),
        queryAllByTestId = _render7.queryAllByTestId;

    expect(queryAllByTestId('toast-icon')).toHaveLength(4);
  });
});