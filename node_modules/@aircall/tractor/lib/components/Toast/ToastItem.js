"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToastItem = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Box = require("../Box");

var _Flex = require("../Flex");

var _Icon = require("../Icon");

var _Typography = require("../Typography");

var _components = require("./components");

var _constants = require("./constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ToastItem = function ToastItem(_ref) {
  var message = _ref.message,
      variant = _ref.variant,
      _ref$dismissIn = _ref.dismissIn,
      dismissIn = _ref$dismissIn === void 0 ? 0 : _ref$dismissIn,
      _ref$icon = _ref.icon,
      icon = _ref$icon === void 0 ? false : _ref$icon,
      _ref$takeContainerWid = _ref.takeContainerWidth,
      takeContainerWidth = _ref$takeContainerWid === void 0 ? false : _ref$takeContainerWid,
      onClick = _ref.onClick,
      onDismiss = _ref.onDismiss,
      action = _ref.action,
      onAction = _ref.onAction;
  var onActionClicked = (0, _react.useCallback)(function (event) {
    event.stopPropagation();
    onAction == null ? void 0 : onAction(onDismiss);
  }, [onAction, onDismiss]);
  var onBodyClicked = (0, _react.useCallback)(function () {
    onClick == null ? void 0 : onClick(onDismiss);
  }, [onClick, onDismiss]);
  var onCloseClicked = (0, _react.useCallback)(function (event) {
    if (onAction) {
      onActionClicked(event);
    } else {
      onDismiss();
    }
  }, [onAction, onActionClicked, onDismiss]);
  var IconComponent = _constants.toastIcons[variant];
  var iconNode = icon && (typeof icon === 'boolean' ? /*#__PURE__*/_react["default"].createElement(IconComponent, null) : icon);
  var hasIcon = !!iconNode;
  return /*#__PURE__*/_react["default"].createElement(_components.ToastContainer, {
    "data-test": "toast-" + variant,
    onClick: onBodyClicked,
    cursor: onClick && 'pointer',
    variant: variant,
    takeContainerWidth: takeContainerWidth
  }, /*#__PURE__*/_react["default"].createElement(_Flex.Flex, {
    alignItems: "center",
    mr: 3
  }, hasIcon && /*#__PURE__*/_react["default"].createElement(_Box.Box, {
    "data-test": "toast-icon"
  }, iconNode), /*#__PURE__*/_react["default"].createElement(_Typography.Typography, {
    ml: hasIcon ? 2 : 0,
    "data-test": "toast-message",
    variant: "body"
  }, message)), action ? /*#__PURE__*/_react["default"].createElement(_components.Action, {
    onClick: onActionClicked
  }, action) : /*#__PURE__*/_react["default"].createElement(_Flex.Flex, {
    position: "relative",
    onClick: onCloseClicked,
    "data-test": "toast-close",
    cursor: "pointer",
    flexShrink: 0,
    alignItems: "center",
    justifyContent: "center",
    size: 24
  }, /*#__PURE__*/_react["default"].createElement(_components.SVGContainer, {
    width: "24",
    height: "24",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react["default"].createElement(_components.IndicatorCircle, {
    r: "9",
    cx: "12",
    cy: "12"
  }), /*#__PURE__*/_react["default"].createElement(_components.ProgressCircle, {
    dismissIn: dismissIn,
    r: "9",
    cx: "12",
    cy: "12"
  })), /*#__PURE__*/_react["default"].createElement(_Icon.CloseOutlined, {
    size: 12
  })));
};

exports.ToastItem = ToastItem;