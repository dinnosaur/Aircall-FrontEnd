"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _Grid = require("../Grid");

var _Typography = require("../Typography");

var _context = require("./context");

var _FormItem = require("./FormItem.decl");

var _excluded = ["label", "name", "helpText", "validationStatus", "children"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var FormItem = function FormItem(_ref) {
  var label = _ref.label,
      name = _ref.name,
      helpText = _ref.helpText,
      validationStatus = _ref.validationStatus,
      children = _ref.children,
      otherStylingProps = _objectWithoutPropertiesLoose(_ref, _excluded);

  var helpTextColor = validationStatus === _FormItem.FormItemStatus.ERROR ? 'red.darker' : 'text.dark';
  var helpTextVariant = validationStatus === _FormItem.FormItemStatus.ERROR ? 'caption' : 'caption2';
  return /*#__PURE__*/_react["default"].createElement(_context.FormItemContext.Provider, {
    value: {
      validationStatus: validationStatus,
      name: name
    }
  }, /*#__PURE__*/_react["default"].createElement(_Grid.Grid, _extends({
    gridGap: "xxs"
  }, otherStylingProps), label && /*#__PURE__*/_react["default"].createElement(_Typography.Typography, {
    textAlign: "start",
    color: "text.base",
    as: "label",
    htmlFor: name
  }, label), children, helpText && /*#__PURE__*/_react["default"].createElement(_Typography.Typography, {
    textAlign: "start",
    color: helpTextColor,
    variant: helpTextVariant
  }, helpText)));
};

var _default = FormItem;
exports["default"] = _default;