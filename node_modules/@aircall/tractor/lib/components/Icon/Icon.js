"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledSystem = require("styled-system");

var _context = require("./context");

var _utils = require("./utils");

var _excluded = ["component", "size", "spin", "color"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var rotate = (0, _styledComponents.keyframes)(["from{transform:rotate(0deg);}to{transform:rotate(360deg);}"]);

var IconContainer = _styledComponents["default"].div.withConfig({
  shouldForwardProp: _utils.shouldForwardProp
}).withConfig({
  displayName: "Icon__IconContainer",
  componentId: "sc-1nxqijo-0"
})(["line-height:0;cursor:", ";", ";> svg{", ";", ";animation:", ";}"], function (_ref) {
  var onClick = _ref.onClick;
  return onClick && 'pointer';
}, _styledSystem.space, _styledSystem.size, _styledSystem.color, function (_ref2) {
  var spin = _ref2.spin;
  return spin && (0, _styledComponents.css)(["", " 2s linear infinite"], rotate);
});

var Icon = /*#__PURE__*/(0, _react.forwardRef)(function (_ref3, ref) {
  var Component = _ref3.component,
      _ref3$size = _ref3.size,
      size = _ref3$size === void 0 ? '24px' : _ref3$size,
      spin = _ref3.spin,
      color = _ref3.color,
      otherStyleProps = _objectWithoutPropertiesLoose(_ref3, _excluded);

  var iconContext = (0, _context.useIconContext)();
  var IconComponent = null;

  if (typeof Component === 'string') {
    if (!iconContext) {
      // TODO: unify the error messages
      console.error('Cannot select the icon component without the icons given using the `<IconProvider>`.');
      return null;
    }

    var selectableIcons = iconContext.icons;
    var IconComp = selectableIcons == null ? void 0 : selectableIcons[Component];

    if (!IconComp) {
      // TODO: unify the error messages
      console.error("Cannot find the corresponding icon component: " + Component + ". Available icons are:", Object.keys(selectableIcons || {}));
      return null;
    }

    IconComponent = IconComp;
  } else {
    IconComponent = Component;
  }

  return /*#__PURE__*/_react["default"].createElement(IconContainer, _extends({
    ref: ref,
    size: size,
    spin: spin,
    color: color
  }, otherStyleProps), /*#__PURE__*/_react["default"].createElement(IconComponent, null));
});
var _default = Icon;
exports["default"] = _default;