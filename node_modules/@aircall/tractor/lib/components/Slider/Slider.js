"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slider = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var SliderRange = _styledComponents["default"].input.withConfig({
  displayName: "Slider__SliderRange",
  componentId: "sc-1b5n2h3-0"
})(["appearance:none;width:100%;height:4px;background-color:", ";border-radius:16px;outline:none;&::-webkit-slider-thumb{appearance:none;width:24px;height:24px;background:", ";border:4px solid ", ";box-shadow:0px 1px 10px rgba(0,0,0,0.12);border-radius:50%;cursor:pointer;}"], function (_ref) {
  var theme = _ref.theme;
  return theme.colors.grey.light;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.colors.primary.base;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.base.white;
});

var Slider = /*#__PURE__*/(0, _react.forwardRef)(function (_ref4, ref) {
  var id = _ref4.id,
      min = _ref4.min,
      max = _ref4.max,
      value = _ref4.value,
      _onChange = _ref4.onChange,
      defaultValue = _ref4.defaultValue;
  return /*#__PURE__*/_react["default"].createElement(SliderRange, {
    ref: ref,
    type: "range",
    min: min,
    max: max,
    value: value,
    defaultValue: defaultValue,
    id: id,
    onChange: function onChange(e) {
      return _onChange(e.target.value, e);
    }
  });
});
exports.Slider = Slider;