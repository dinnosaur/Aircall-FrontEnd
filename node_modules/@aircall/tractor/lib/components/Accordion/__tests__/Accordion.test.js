"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _ = require("..");

var _context = require("../context");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('components/Accordion/Accordion', function () {
  it('should provide open item and function to update open item through context', function () {
    var onItemClickMock = jest.fn();
    var accordionContext = {
      selectedItemId: null,
      onItemClick: onItemClickMock
    };
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_.Accordion.Container, {
      defaultSelected: 1
    }, /*#__PURE__*/_react["default"].createElement(_.Accordion.Item, {
      id: 1
    }, /*#__PURE__*/_react["default"].createElement(_.Accordion.Body, null, /*#__PURE__*/_react["default"].createElement(_context.AccordionMainContext.Consumer, null, function (context) {
      accordionContext = context;
      return 'Test';
    })))));
    expect(accordionContext).toEqual({
      selectedItemId: 1,
      onItemClick: expect.any(Function)
    });
    (0, _react2.act)(function () {
      accordionContext.onItemClick(2);
    });
    expect(accordionContext.selectedItemId).toEqual(2);
  });
  it('should not accept anything else than a AccordionItem', function () {
    function DummyComponent() {
      return /*#__PURE__*/_react["default"].createElement("span", null, "DummyComponent");
    }

    DummyComponent.displayName = 'DummyComponent';
    expect(function () {
      return (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_.Accordion.Container, {
        defaultSelected: 1
      }, /*#__PURE__*/_react["default"].createElement(DummyComponent, null)));
    }).toThrowError('AccordionItem only allows AccordionItem as immediate children. Found invalid child DummyComponent.');
  });
});