"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _useTextField2 = require("../../hooks/useTextField");

var _TextField = require("../TextField");

var _excluded = ["id", "validationStatus", "resizable", "onClear"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var TextareaComponent = _styledComponents["default"].textarea.withConfig({
  displayName: "Textarea__TextareaComponent",
  componentId: "sc-14up9by-0"
})(["", " min-height:108px;padding-top:", ";padding-bottom:", ";resize:", ";"], _TextField.makeDefaultField, function (_ref) {
  var theme = _ref.theme;
  return theme.space.s + "px";
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.space.s + "px";
}, function (_ref3) {
  var resizable = _ref3.resizable;
  return resizable ? 'vertical' : 'none';
});

var clearIconStyle = (0, _styledComponents.css)(["top:", ";right:", ";transform:none;"], function (_ref4) {
  var theme = _ref4.theme;
  return theme.space.s + "px";
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.space.s + "px";
});
/**
 * Textarea component.
 * @description Figma specs https://www.figma.com/file/6HfVoWxocYbsm1Wto1Hqr7/(WIP)-00.-Tractor---Desktop?node-id=2013%3A0
 */

var Textarea = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var id = props.id,
      validationStatus = props.validationStatus,
      _props$resizable = props.resizable,
      resizable = _props$resizable === void 0 ? false : _props$resizable,
      onClear = props.onClear,
      textareaProps = _objectWithoutPropertiesLoose(props, _excluded);

  var _useTextField = (0, _useTextField2.useTextField)({
    id: id,
    validationStatus: validationStatus,
    onClear: onClear
  }),
      componentStatus = _useTextField.componentStatus,
      componentId = _useTextField.componentId,
      error = _useTextField.error,
      hasLeftIcon = _useTextField.hasLeftIcon,
      hasClearIcon = _useTextField.hasClearIcon;

  return /*#__PURE__*/_react["default"].createElement(_TextField.TextField, {
    error: error,
    clearIconStyle: clearIconStyle,
    onClear: onClear
  }, /*#__PURE__*/_react["default"].createElement(TextareaComponent, _extends({
    ref: ref,
    "data-test": "textarea",
    resizable: resizable,
    id: componentId,
    validationStatus: componentStatus,
    hasLeftIcon: hasLeftIcon,
    hasClearIcon: hasClearIcon
  }, textareaProps)));
});
var _default = Textarea;
exports["default"] = _default;