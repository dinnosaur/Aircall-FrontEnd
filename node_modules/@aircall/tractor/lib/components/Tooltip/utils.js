"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeCaretOffset = exports.getCaretOffset = void 0;

/** the caret size is 5px * 5px */
var CARET_SIZE = 5;
/**
 * Position the caret accordingly
 */

var makeCaretOffset = function makeCaretOffset(_ref) {
  var tooltipPosition = _ref.tooltipPosition,
      tooltipAnchor = _ref.tooltipAnchor,
      caretPointsAtCenter = _ref.caretPointsAtCenter,
      containerBoundingBox = _ref.containerBoundingBox;
  var style = {};

  if (['top', 'bottom'].includes(tooltipPosition)) {
    if (tooltipPosition === 'top') {
      style.top = '100%';
    } else {
      style.top = '0';
    }

    if (tooltipAnchor === 'start') {
      if (caretPointsAtCenter) {
        style.left = containerBoundingBox.width / 2;
      } else {
        style.left = '16px';
      }
    } else if (tooltipAnchor === 'center') {
      style.left = '50%';
    } else if (tooltipAnchor === 'end') {
      if (caretPointsAtCenter) {
        style.right = containerBoundingBox.width / 2 - CARET_SIZE;
      } else {
        style.right = '16px';
      }
    }
  }

  if (['left', 'right'].includes(tooltipPosition)) {
    if (tooltipPosition === 'left') {
      style.left = '100%';
    } else {
      style.left = '0';
    }

    if (tooltipAnchor === 'start') {
      if (caretPointsAtCenter) {
        style.top = containerBoundingBox.height / 2;
      } else {
        style.top = '16px';
      }
    } else if (tooltipAnchor === 'center') {
      style.top = '50%';
    } else if (tooltipAnchor === 'end') {
      if (caretPointsAtCenter) {
        style.bottom = containerBoundingBox.height / 2 - CARET_SIZE;
      } else {
        style.bottom = '16px';
      }
    }
  }

  return style;
};
/**
 * Make an extra space (offset) for the caret to be displayed
 */


exports.makeCaretOffset = makeCaretOffset;

var getCaretOffset = function getCaretOffset(position) {
  switch (position) {
    case 'top':
      return {
        top: -8
      };

    case 'bottom':
      return {
        top: 8
      };

    case 'left':
      return {
        left: -8
      };

    case 'right':
      return {
        left: 8
      };

    default:
      return {};
  }
};

exports.getCaretOffset = getCaretOffset;