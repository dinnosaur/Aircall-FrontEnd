"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _lodashEs = require("lodash-es");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledSystem = require("styled-system");

var _Icon = require("../Icon");

var _excluded = ["disabled", "onClick", "discColor", "size", "color", "component", "spin"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var IconContainer = (0, _styledComponents["default"])(_Icon.Icon).withConfig({
  displayName: "IconButton__IconContainer",
  componentId: "sc-407jqq-0"
})(["position:relative;z-index:2;"]); // Seeing as IconButton doesn't have fixed variants and/or sizes and is pure CSS, it's all here.

var IconButtonContainer = _styledComponents["default"].button.withConfig({
  displayName: "IconButton__IconButtonContainer",
  componentId: "sc-407jqq-1"
})(["margin:0;padding:0;border:none;position:relative;cursor:pointer;background:none;", " &::before,&::after{content:'';display:block;position:absolute;top:50%;left:50%;width:calc(100% + 8px);height:calc(100% + 8px);border-radius:50%;transition:opacity 0.15s ease-in-out,transform 0.15s ease-in-out;transform:translate(-50%,-50%) scale(0.75);pointer-events:none;opacity:0;z-index:1;}&::before{background-color:", ";}&:hover{&::before{opacity:1;transform:translate(-50%,-50%) scale(1);}}&:focus{outline:none;&::after{background-color:", ";opacity:1;transform:translate(-50%,-50%);}}&:disabled{cursor:default;opacity:0.5;&::before,&::after{content:none;}}"], _styledSystem.space, function (_ref) {
  var discColor = _ref.discColor,
      theme = _ref.theme;
  return (0, _lodashEs.get)(theme.colors, discColor || 'grey.lighter');
}, function (_ref2) {
  var discColor = _ref2.discColor,
      theme = _ref2.theme;
  return (0, _lodashEs.get)(theme.colors, discColor || 'grey.lighter');
});

var IconButton = /*#__PURE__*/(0, _react.forwardRef)(function (_ref3, ref) {
  var _ref3$disabled = _ref3.disabled,
      disabled = _ref3$disabled === void 0 ? false : _ref3$disabled,
      onClick = _ref3.onClick,
      discColor = _ref3.discColor,
      size = _ref3.size,
      color = _ref3.color,
      component = _ref3.component,
      spin = _ref3.spin,
      otherStyleProps = _objectWithoutPropertiesLoose(_ref3, _excluded);

  return /*#__PURE__*/_react["default"].createElement(IconButtonContainer, _extends({
    ref: ref,
    onClick: onClick,
    discColor: discColor,
    disabled: disabled
  }, otherStyleProps), /*#__PURE__*/_react["default"].createElement(IconContainer, {
    size: size,
    component: component,
    color: color,
    spin: spin
  }));
});
var _default = IconButton;
exports["default"] = _default;