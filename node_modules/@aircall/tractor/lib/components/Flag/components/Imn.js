"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function SvgImn(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "24px",
    height: "24px",
    viewBox: "0 0 32 32",
    fill: "none"
  }, props), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M25.69 1.263c4.448 1.728 5.477 6.646 5.477 6.646.664 2.758.863 5.582.83 8.107.033 2.493-.2 5.317-.864 8.108 0 0-1.028 4.918-5.476 6.646-2.09.83-5.907 1.196-9.657 1.23-3.75-.034-7.567-.432-9.658-1.23C1.895 29.042.866 24.124.866 24.124c-.697-2.79-.896-5.615-.863-8.14-.033-2.493.2-5.317.863-8.109 0 0 1.03-4.918 5.476-6.646C8.433.432 12.25.033 16 0c3.75.033 7.567.432 9.69 1.263z",
    fill: "#E94B35"
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M17.577 23.079l-.636.191.235-.62-.379-.547.664.032.402-.529.175.641.627.22-.556.364-.014.663-.518-.415zm4.08-13.93l-.663-.038.434-.503-.17-.642.613.256.559-.359-.055.662.514.42-.646.153-.24.619-.346-.568zM7.764 12.903l-.463.476-.096-.658-.595-.293.595-.294.096-.658.463.476.655-.112-.31.588.31.587-.655-.112z",
    fill: "#F2C500"
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.854 13.614c-.112-1.221-.296-2.28-.32-3.505-.025-.13-.13-.315-.264-.2-.432.395-.304.272-.538.427-.28.228-.3.075-.624.256-.359.17-2.535.585-3.38.459-.012.023-.8.273-.8.273l-.397.362c-.184.163-.572.308-.816-.274-.023-.012.005-.297.005-.297l-.507-1.04C4.875 8.814 5.228 8.6 5.065 8.25c-.094-.08.027-.605.514-.241l1.687 1.534c.173.125.534.36 1.03.359.184-.04.579-.228 1.045-.551.88-.43 2.035-1.06 3.258-1.251.148-.133.265-.11.48-.416a.69.69 0 01.455-.302c.398-.035.811-.123 1.234.102.367.129.627.51.71.996.127.482.425 1.04.706 1.392.152.324 1.033 2.575 1.031 3.041.018.1.154.385.21.414 1.087.577 2.075 1.003 3.116 1.656.123.05.335.064.313-.11-.094-.58-.061-.404-.063-.685-.037-.36.102-.292.128-.662.054-.394.9-2.442 1.467-3.08-.013-.023.21-.818.21-.818l-.085-.531c-.036-.243.055-.647.676-.532.023-.013.245.166.245.166l1.149.146c1.787-.428 1.772-.017 2.154.038.118-.034.492.355-.08.563l-2.207.571c-.2.076-.594.25-.865.665-.067.175-.126.609-.111 1.176-.122.971-.228 2.284-.738 3.41.03.198-.054.283.085.63a.69.69 0 01.003.547c-.189.352-.341.745-.761.976-.309.236-.77.245-1.222.048a4.192 4.192 0 00-1.551-.17c-.355-.052-2.72-.548-3.11-.805-.093-.039-.18-.068-.279-.117-1.088.67-1.944 1.323-3.023 1.91-.104.083-.22.262-.057.327.196.078.3.128.619.281.208.127.312.224.531.453.317.24 1.68 1.964 1.957 2.771.027 0 .61.584.61.584l.505.186c.23.088.537.365.133.85 0 .027-.265.133-.265.133l-.69.93c-.503 1.767-.854 1.553-1.09 1.858-.028.12-.55.255-.451-.345l.584-2.204c.032-.21.074-.64-.156-1.08-.12-.144-.469-.408-.97-.673-.787-.582-1.88-1.317-2.612-2.315-.186-.07-.219-.185-.59-.234a.69.69 0 01-.478-.265c-.214-.337-.483-.663-.478-1.142-.054-.385.164-.791.558-1.089a4.19 4.19 0 00.908-1.268c.219-.284 1.81-2.103 2.225-2.317.063-.049.12-.098.185-.147z",
    fill: "#fff"
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.812 13.283c-.085-.077 1.592.596 1.823.604.317-.116 1.557-1.136 1.557-1.136.013.108.156.516.282.575-.504.41-.97.73-1.474 1.138.036.649-.088 1.378.24 2.104-.019.025-.605 0-.605 0-.347-.348-.272-2.104-.272-2.104-.553-.247-1.18-.434-1.733-.68.08-.052.182-.5.182-.5z",
    fill: "#F2C500"
  }));
}

var _default = SvgImn;
exports["default"] = _default;