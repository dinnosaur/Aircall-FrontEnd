"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function SvgGbWls(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "24px",
    height: "24px",
    viewBox: "0 0 32 32",
    fill: "none"
  }, props), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M.003 16h31.994v.016c.033 2.493-.2 5.317-.864 8.108 0 0-1.028 4.918-5.476 6.646-2.09.83-5.907 1.196-9.657 1.23-3.75-.034-7.567-.432-9.658-1.23C1.895 29.042.866 24.124.866 24.124.171 21.34-.029 18.521.003 16z",
    fill: "#1AAF5D"
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M31.997 16H.003v-.017c-.033-2.492.2-5.316.863-8.108 0 0 1.03-4.918 5.476-6.646C8.433.432 12.25.033 16 0c3.75.033 7.567.432 9.69 1.263 4.448 1.728 5.477 6.646 5.477 6.646.662 2.752.862 5.57.83 8.091z",
    fill: "#fff"
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.568 12.215c-.737.637-.529 1.145-.558 1.716.024.384-.083.741-.322.957l-1.64.328-.157-.448c.05-.23.242-.342.646-.199.032-.294-.208-.414-.489-.517-.096-.074-.216-.131-.2-.386-.048-.577.889.041.898.041.008 0-.032-.582-.462-.699-.235-.082-.334-.327-.244-.508.187-.37.54.03.811.044-.01-.242-.08-.414-.29-.61-.114-.068-.392-.12-.4-.236-.005-.157.262-.224.629-.18-.077-.22-.323-.363-.663-.466l-.2-.345c-.095-.174-.138-.179.082-.508.198-.127.46-.305.658-.432-.072-.008-.185-.34-.13-.732-.212.287-.477.235-.716.353 0 0-.679.12-.898.405l-1.708-.086c-.363.05-.672.152-.732.5-.83.083-1.697.01-2.328.793.43-.02.806-.121 1.29-.06 0 0 .54.664 1.36.06.28-.206.705.179.786.345.008.008-1.79.415-3.629.259l.532-.26c-.67-.134-1.3-.256-1.891-.715.223.83 1.376 1.806 1.612 1.802 0 .009-.226-.405-.226-.405.665.03 1.33.057 1.996.086.073.218.04.463.219.656l.427-.224s.087.201.174.335c.127-.644.837-.75.837-.75s.148.337.148.345c-1.351.707-1.638 4.154-1.3 4.413-1.444 1.613-2.407-1.326-2.44-1.93-.03-.176.016-.296.261-.44.245-.13.297-.23.28-.595.096-.244.169-.494-.131-.663.009.29-.082.43-.201.56-.143-.02-.192.144-.288.216-.134-.18.283-.456-.026-.854-.018-.018-.216-.52-.706-.508a.66.66 0 01.33.594c-.154.431-.232.764-.078 1.26-.203-.303-.319-.876-.487-.976-.148-.028-.22-.374-.794-.275.247.066.326.252.393.422-.152.077-.077.281.034.422-.021.331.18.525.48.648l-.149 1.352c-.119-.015-.695.722-.461.777-.07.247-.134.397-.507.448 0 0 .394.23.72-.164.35-.009.5-.672.64-1.035.062.325.399 1.318 1.16 1.811.664.703 1.21 1.366 1.203 2.302.26-.239.615-1.285 1.868-1.126-.08.164-.701 2.712-2.312 2.307-.203-.118-.518-.288-.663-.198-.267-.177-.652-.203-.715.198.2-.165.421.186.54.232-.052.058-.83.131-.932.543.148-.12.75-.164.889.018.006.066-.374.138-.48.767.368-.387.628-.285.628-.285.142.205.663.174 1.038-.163.527-.291.68.127 1.02-.147.283-.208.616-.07.846.173.264.098.541.178.759 0 0 0 .266-.168.532.103.002-.306-.217-.468-.514-.474-.03-.029-.012.011-.088-.087-.28-.057-.593-.034-.837-.172.115-.432.283-.823.61-1.155.404-.429.702-.623 1.212-1.279-.02.37.267.783.419 1.159 0 0 .304-.481.348-.872.01 0 1.404-.24 2.416-.827-.203.41.617 1.448 1.961 1.63-.787 1.008-2.21.734-2.424.517-.11-.092-.138-.225-.33-.276-.123-.143-.27-.11-.315.026-.127-.098-.6-.143-.68.301.221-.16.42-.22.559-.025-.076.135.184.213.41.267.159.01.442.154.53.396-.205.062-.517.042-.723-.112a.477.477 0 00-.566-.034c-.188-.119-.637.105-.655.464.19-.17.361-.254.533-.145-.085.02-.053.028-.044.077l.435.25c-.213.056-.414.14-.321.534 0 0 .174-.34.566-.215.008-.008.054.122.166.034.17-.19.557-.276.898-.31.273-.032.546-.111.784.043.212-.108.448-.18.69-.008.285.089.492.417.854.267.18-.123.4-.13.628.12.002-.314-.237-.42-.576-.49l-.235-.139c-.218-.032-.437.007-.655-.095 1.141-.291 1.94-.92 2.504-1.818l.54.189c.128.008.137.052.4.13.01-.384-.156-.78-.854-.819l-.916-.345c-.194-.203-.282-.633-.034-.888.243-.213.285-.188.445-.448 1.865 1.081 2.663-.303 3.992.922.705 1.388-.673 2.775-1.045 2.613l-.4-.251-.428-.413c-.073-.068-.223-.089-.254.06 0 0-.548-.121-.592.336.227-.219.55-.026.55-.017 0 .008-.077.06-.018.147.013-.01.4.143.744.29.188.07.229.091.31.134l-.31-.135c-.21-.078-.414-.141-.474-.126-.195-.018-.402-.042-.497.104-.21.087-.538.158-.523.543.141-.23.336-.22.584-.199l-.017.052c.269.121.218-.033.469-.056.21-.019.507.055.664.108-.198.057-.466.033-.593.172-.023.046-.105.027-.07.137 0 0-.384-.01-.488.518.392-.248.69-.24.698-.24.008 0 .122.025.122.025s.47-.31.48-.31c.008 0 .455-.197.662.025.18.087.372.093.558-.018.367-.157.71-.168 1.047.053l.305.18.13-.086s.346-.096.599.208c-.105-.526-.485-.543-.485-.543l-.088-.078-.54-.207c-.078-.193-.276-.346-.079-.578.201-.989.987-3.465-1.5-4.047 1.875-.095 4.128-1.463 3.262-3.202l.41-1.259c.192.384.583.677.933.802-.289-.545-.454-2.212-.288-3.362-.756.922-1.59 1.741-2.477 2.573.437.1.818.03 1.24-.022-.12.241-.236.484-.355.725-1.152-.667-2.505-.167-2.515.724.04 1.038 1.338 1.185 2.087.824-.149.946-2.349.597-2.349.597-.782-.266-1.524-.22-2.346-.214.171-.52 1.119-.98 1.84-.777-1.01-1.12.143-2.511 1.535-2.94-1.517-.494-.21-1.637.924-2.456 0 0-3.264 1.358-3.561 1.354-.928-.07-.673-1.158-.319-1.742-1.747.955-3.31 1.949-4.848 3.215z",
    fill: "#E94B35"
  }));
}

var _default = SvgGbWls;
exports["default"] = _default;