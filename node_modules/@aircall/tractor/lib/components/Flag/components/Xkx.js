"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function SvgXkx(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "24px",
    height: "24px",
    viewBox: "0 0 32 32",
    fill: "none"
  }, props), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M25.69 1.263c4.448 1.728 5.477 6.646 5.477 6.646.664 2.758.863 5.582.83 8.107.033 2.493-.2 5.317-.864 8.108 0 0-1.028 4.918-5.476 6.646-2.09.83-5.907 1.196-9.657 1.23-3.75-.034-7.567-.432-9.658-1.23C1.895 29.042.866 24.124.866 24.124c-.697-2.79-.896-5.615-.863-8.14-.033-2.493.2-5.317.863-8.109 0 0 1.03-4.918 5.476-6.646C8.433.432 12.25.033 16 0c3.75.033 7.567.432 9.69 1.263z",
    fill: "#227FBB"
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.636 19.85c-.546-.78-.834-.567-.929-1.025-.094-.458.276-.838.276-.838s-.87-.21-.966-.496c-.097-.285.249-.638.543-.75.294-.114.5.244.74.257.708.04.568-.832 1.745-.832 1.176 0 .853-.423 1.196-.418.19.003-.496-.438-.324-.721.2-.33 1.128-.393 1.505-1.097s-.788-.96-.602-1.371c.252-.554 1.523-.724 1.91-.384.386.339-.664.532.353.97 1.018.438 1.187.08 1.56.282.45.243.725 1.521 1.215 2.013.414.415 1.149.246 1.315.597.248.52-.363.961-.363.961s1.541.202 1.81.626c.27.424.93 0 .93 0s.76.42.305.63c-.228.106-.191.377-.376.746-.187.37-.594.84-.858 1.177-.115.146.116.409 0 .531-.136.143-.62.145-.756.304-.14.164.623.82.49.976-.19.223-1.27-.06-1.434.137-.442.53-.874.784-.69 1.101.183.317-.338.62-.658.321-.313-.29-.046-.992-.63-.992-.39 0-.965.425-1.572.767-.406.228-1.083.351-1.305.583-.38.396.096 1.079 0 1.463-.11.437-1.003.92-1.331.42-.329-.5.57-.703 0-1.492-.57-.788.04-1.129-.818-2.171-.858-1.043-1.484-.543-1.788-.865-.304-.322.054-.63-.493-1.41z",
    fill: "#F2C500"
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.5 11.328L5.573 12l.321-1.135-.894-.72 1.126-.029L6.5 9l.374 1.116 1.126.03-.894.72L7.427 12l-.927-.672zm3.8-2L9.373 10l.32-1.135-.893-.72 1.125-.029L10.3 7l.374 1.116 1.126.03-.894.72.32 1.134-.926-.672zm3.8-1L13.173 9l.321-1.135-.894-.72 1.126-.029L14.1 6l.375 1.116 1.125.03-.894.72L15.027 9l-.927-.672zm3.8 0L16.973 9l.321-1.135-.894-.72 1.125-.029L17.9 6l.374 1.116 1.126.03-.894.72L18.827 9l-.927-.672zm3.8 1l-.927.672.321-1.135-.894-.72 1.126-.029L21.7 7l.375 1.116 1.125.03-.894.72.321 1.134-.927-.672zm3.8 2l-.927.672.321-1.135-.894-.72 1.125-.029L25.5 9l.375 1.116 1.125.03-.894.72.321 1.134-.927-.672z",
    fill: "#fff"
  }));
}

var _default = SvgXkx;
exports["default"] = _default;