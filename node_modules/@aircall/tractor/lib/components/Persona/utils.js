"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTitleVariant = exports.getSubTitleVariant = exports.getSpaceVariant = exports.getBadgeSize = void 0;

var _Avatar = require("../Avatar");

var _Badge = require("../Badge");

var _Spacer = require("../Spacer");

var _Typography = require("../Typography");

var getTitleVariant = function getTitleVariant(size) {
  switch (size) {
    case _Avatar.AvatarSize.X_LARGE:
    case _Avatar.AvatarSize.LARGE:
      return _Typography.TypographyVariant.SUBHEADING;

    case _Avatar.AvatarSize.MEDIUM:
    case _Avatar.AvatarSize.SMALL:
      return _Typography.TypographyVariant.SUBHEADING_2;

    case _Avatar.AvatarSize.X_SMALL:
      return _Typography.TypographyVariant.CAPTION;

    default:
      return undefined;
  }
};

exports.getTitleVariant = getTitleVariant;

var getSubTitleVariant = function getSubTitleVariant(size) {
  switch (size) {
    case _Avatar.AvatarSize.X_LARGE:
    case _Avatar.AvatarSize.LARGE:
      return _Typography.TypographyVariant.BODY_2;

    default:
      return _Typography.TypographyVariant.CAPTION_2;
  }
};

exports.getSubTitleVariant = getSubTitleVariant;

var getSpaceVariant = function getSpaceVariant(size) {
  switch (size) {
    case _Avatar.AvatarSize.X_LARGE:
      return _Spacer.SpaceVariant.S;

    case _Avatar.AvatarSize.LARGE:
    case _Avatar.AvatarSize.MEDIUM:
      return _Spacer.SpaceVariant.XS;

    case _Avatar.AvatarSize.SMALL:
    case _Avatar.AvatarSize.X_SMALL:
      return _Spacer.SpaceVariant.XXS;

    default:
      return _Spacer.SpaceVariant.S;
  }
};

exports.getSpaceVariant = getSpaceVariant;

var getBadgeSize = function getBadgeSize(size) {
  switch (size) {
    case _Avatar.AvatarSize.X_LARGE:
      return _Badge.BadgeSize.X_LARGE;

    case _Avatar.AvatarSize.LARGE:
      return _Badge.BadgeSize.LARGE;

    case _Avatar.AvatarSize.MEDIUM:
      return _Badge.BadgeSize.MEDIUM;

    case _Avatar.AvatarSize.SMALL:
      return _Badge.BadgeSize.SMALL;

    case _Avatar.AvatarSize.X_SMALL:
      return _Badge.BadgeSize.X_SMALL;

    default:
      return _Badge.BadgeSize.MEDIUM;
  }
};

exports.getBadgeSize = getBadgeSize;