"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _Avatar = require("../Avatar");

var _Badge = require("../Badge");

var _Box = require("../Box");

var _Spacer = require("../Spacer");

var _Typography = require("../Typography");

var _utils = require("./utils");

var _excluded = ["title", "subtitle", "badge", "size", "onClick"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Persona = function Persona(_ref) {
  var title = _ref.title,
      subtitle = _ref.subtitle,
      badge = _ref.badge,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? _Avatar.AvatarSize.MEDIUM : _ref$size,
      onClick = _ref.onClick,
      avatarProps = _objectWithoutPropertiesLoose(_ref, _excluded);

  var titleVariant = (0, _utils.getTitleVariant)(size);
  var subtitleVariant = (0, _utils.getSubTitleVariant)(size);
  var spaceVariant = (0, _utils.getSpaceVariant)(size);
  var badgeSize = (0, _utils.getBadgeSize)(size);
  var hasAvatar = !!avatarProps.src || !!avatarProps.children || !!avatarProps.icon;
  var avatar = hasAvatar ? /*#__PURE__*/_react["default"].createElement(_Avatar.Avatar, _extends({}, avatarProps, {
    size: size
  })) : null;
  return /*#__PURE__*/_react["default"].createElement(_Spacer.Spacer, {
    space: spaceVariant,
    alignItems: "center",
    onClick: onClick,
    cursor: onClick && 'pointer'
  }, badge ? /*#__PURE__*/_react["default"].createElement(_Badge.Badge, _extends({
    size: badgeSize
  }, badge), avatar) : avatar, /*#__PURE__*/_react["default"].createElement(_Box.Box, null, /*#__PURE__*/_react["default"].createElement(_Typography.Typography, {
    variant: titleVariant,
    textAlign: "left"
  }, title), subtitle && /*#__PURE__*/_react["default"].createElement(_Typography.Typography, {
    variant: subtitleVariant,
    color: "text.dark",
    textAlign: "left"
  }, subtitle)));
};

var _default = Persona;
exports["default"] = _default;