"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromTheme = void 0;

var _themeGet = require("@styled-system/theme-get");

var styledSystem = _interopRequireWildcard(require("styled-system"));

var _styles = require("../styles");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Used to grab a value from the theme, if the theme is not provided
 * it'll default to the base tractor theme
 * @param {string} key theme key
 */
var fromTheme = function fromTheme(key, fallback) {
  var _styledSystem$get;

  return (0, _themeGet.themeGet)(key, (_styledSystem$get = styledSystem.get(_styles.baseTheme, key)) != null ? _styledSystem$get : fallback);
};

exports.fromTheme = fromTheme;