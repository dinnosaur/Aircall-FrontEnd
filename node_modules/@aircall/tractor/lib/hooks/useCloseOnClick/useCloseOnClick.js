"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCloseOnClick = void 0;

var _react = require("react");

/**
 * Listen for clicks outside the overlay in order to close it
 */
var useCloseOnClick = function useCloseOnClick(options) {
  var container = options.container,
      node = options.node,
      triggerNode = options.triggerNode,
      closeOnInsideClick = options.closeOnInsideClick,
      onClose = options.onClose;
  var handleClick = (0, _react.useCallback)(function (event) {
    var target = event.target;

    if (closeOnInsideClick) {
      /**
       * we use setTimeout to make sure that onClose calls after children onclick handlers
       * otherwise the onClick events would fire on detached children and fail
       */
      setTimeout(onClose, 0);
      return;
    }

    var hasClickedOnTheTrigger = triggerNode.contains(target);
    var hasClickedOnThePortal = node.contains(target);

    if (!hasClickedOnTheTrigger && !hasClickedOnThePortal) {
      onClose();
    }
  }, [triggerNode, node, closeOnInsideClick, onClose]);
  (0, _react.useEffect)(function () {
    if (!node || !triggerNode) {
      return;
    }

    container.addEventListener('click', handleClick, true);
    return function () {
      container.removeEventListener('click', handleClick, true);
    };
  }, [container, handleClick, node, triggerNode]);
};

exports.useCloseOnClick = useCloseOnClick;