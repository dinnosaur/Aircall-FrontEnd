import { ReactElement, ReactNode } from 'react';
import { UseTriggerOptions } from '../../hooks';
import { BoundaryAlignmentProps } from '../BoundaryAlignment';
import { BoxProps } from '../Box';
export interface TooltipProps extends Pick<UseTriggerOptions, 'body' | 'portalContainer'> {
    /**
     * Basically the content you want to display inside of the tooltip.
     *
     * No styling will be applied on the text.
     */
    content?: ReactNode;
    /**
     * Preformatted content (which uses behind the scenes a Typography component.)
     */
    title?: string;
    /**
     * The position of the tooltip content according to the parent.
     */
    position?: BoundaryAlignmentProps['position'];
    /**
     * The alignment of the tooltip content according to the parent.
     */
    anchor?: BoundaryAlignmentProps['anchor'];
    /**
     * Makes the caret point to the center of the trigger.
     */
    caretPointsAtCenter?: boolean;
    /**
     * Delay in ms before showing the tooltip on mouse enter
     */
    mouseEnterDelay?: number;
    /**
     * Delay in ms before hidden the tooltip on mouse leave
     */
    mouseLeaveDelay?: number;
    /**
     * Maximum width of the Tooltip's content
     */
    maxWidth?: number | string;
    /**
     * Whether the tooltip content is visible or not
     */
    visible?: boolean;
    children: ReactElement;
}
export interface TooltipContainerProps extends BoxProps {
    tooltipPosition: NonNullable<BoundaryAlignmentProps['position']>;
    tooltipAnchor: NonNullable<BoundaryAlignmentProps['anchor']>;
    caretPointsAtCenter: boolean;
    containerBoundingBox: ClientRect;
}
