import { DOMAttributes, ReactNode } from 'react';
import { ColorProps } from 'styled-system';
import { VariantType, ModeType } from '../../utils/styles';
export interface AvatarProps extends ColorProps {
    /**
     * Defines the size of the avatar.
     *
     * Possible values: `xSmall` | `small` | `medium` | `large` | `xLarge`
     **/
    size?: AvatarSizes;
    /**
     * You can choose all the variations defined on the "colors" theme key
     */
    variant?: VariantType;
    /**
     * Defines the mode of the avatar.
     *
     * It supports light and dark modes.
     */
    mode?: ModeType;
    /**
     * Defines the URL of the image to use.
     */
    src?: string;
    /**
     * Defines icon to use as avatar.
     */
    icon?: ReactNode;
    /**
     * Disabled state of the avatar. Note that it'll apply a grayscale filter on an avatar image.
     */
    disabled?: boolean;
    /**
     * _Only compatible with icon prop._
     *
     * This removes the Avatar border and padding when used alongside an icon.
     */
    borderless?: boolean;
    onClick?: DOMAttributes<HTMLDivElement>['onClick'];
    children?: ReactNode;
}
export interface AvatarContainerProps extends ColorProps {
    avatarSize: AvatarSizes;
    disabled?: boolean;
    variant?: VariantType;
    mode?: ModeType;
    hasImage?: boolean;
    borderless?: boolean;
    clickable?: boolean;
}
export interface AvatarImgProps {
    disabled?: boolean;
}
export declare enum AvatarSize {
    X_SMALL = "xSmall",
    SMALL = "small",
    MEDIUM = "medium",
    LARGE = "large",
    X_LARGE = "xLarge"
}
export declare type AvatarSizes = 'xSmall' | 'small' | 'medium' | 'large' | 'xLarge';
