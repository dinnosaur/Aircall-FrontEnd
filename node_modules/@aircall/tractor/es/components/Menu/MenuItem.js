import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
var _excluded = ["onClick", "children", "data-test", "disabled"];
import React from 'react';
import styled, { css } from 'styled-components';
import { Spacer } from '../Spacer';
var Container = styled(Spacer).withConfig({
  displayName: "MenuItem__Container",
  componentId: "sc-1j5x6k6-0"
})(["height:48px;transition:200ms background-color;text-align:left;cursor:", ";", " ", ""], function (_ref) {
  var onClick = _ref.onClick;
  return !!onClick ? 'pointer' : undefined;
}, function (_ref2) {
  var onClick = _ref2.onClick;
  return !!onClick && css(["&:hover,&:focus{background-color:", ";}&:active{background-color:", ";}"], function (_ref3) {
    var theme = _ref3.theme;
    return theme.colors.grey.lighter;
  }, function (_ref4) {
    var theme = _ref4.theme;
    return theme.colors.grey.light;
  });
}, function (_ref5) {
  var disabled = _ref5.disabled,
      theme = _ref5.theme;
  return disabled && css(["color:", ";cursor:not-allowed;&:hover,&:focus,&:active{color:", ";background-color:", ";}"], theme.colors.text.light, theme.colors.text.light, theme.colors.base.white);
});
export var MenuItem = function MenuItem(_ref6) {
  var onClick = _ref6.onClick,
      children = _ref6.children,
      _ref6$dataTest = _ref6['data-test'],
      testId = _ref6$dataTest === void 0 ? 'menu-item' : _ref6$dataTest,
      disabled = _ref6.disabled,
      otherStyleProps = _objectWithoutPropertiesLoose(_ref6, _excluded);

  return /*#__PURE__*/React.createElement(Container, _extends({
    py: 3,
    px: 4,
    backgroundColor: "base.white",
    onClick: disabled ? undefined : onClick,
    "data-test": testId,
    alignItems: "center",
    space: "xxs",
    disabled: disabled
  }, otherStyleProps), children);
};