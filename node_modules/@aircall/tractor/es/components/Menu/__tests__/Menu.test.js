import React from 'react';
import { cleanup, render } from 'test-utils';
import { Menu } from '../Menu';
import { MenuItem } from '../MenuItem';
jest.mock('../../../utils/dom');
afterEach(cleanup);
/**
 * More of a placeholder for now, until more functionality is added
 */

describe('Menu', function () {
  describe('Dimensions', function () {
    it('should render with a fixed with', function () {
      var DTI = 'menu';
      var WIDTH = 67;
      var LABEL = 'Hello, World!';

      var _render = render( /*#__PURE__*/React.createElement(Menu, {
        width: WIDTH,
        "data-test": DTI
      }, /*#__PURE__*/React.createElement(MenuItem, null, LABEL))),
          getByTestId = _render.getByTestId;

      expect(getByTestId(DTI)).toHaveStyle("width: " + WIDTH + "px;");
    });
  });
  describe('Children', function () {
    it('should render one menu item', function () {
      var TITLE = 'Hello';

      var _render2 = render( /*#__PURE__*/React.createElement(Menu, null, /*#__PURE__*/React.createElement(MenuItem, null, TITLE))),
          queryByText = _render2.queryByText;

      expect(queryByText(TITLE)).toBeInTheDocument();
    });
    it('should render multiple menu item', function () {
      var A = 'Hello';
      var B = 'World';
      var C = '!?!';

      var _render3 = render( /*#__PURE__*/React.createElement(Menu, null, /*#__PURE__*/React.createElement(MenuItem, null, A), /*#__PURE__*/React.createElement(MenuItem, null, B), /*#__PURE__*/React.createElement(MenuItem, null, C))),
          queryByText = _render3.queryByText;

      expect(queryByText(A)).toBeInTheDocument();
      expect(queryByText(B)).toBeInTheDocument();
      expect(queryByText(C)).toBeInTheDocument();
    });
  });
});