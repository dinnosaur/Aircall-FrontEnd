import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
var _excluded = ["disabled", "onClick", "discColor", "size", "color", "component", "spin"];
import React, { forwardRef } from 'react';
import { get } from 'lodash-es';
import styled from 'styled-components';
import { space } from 'styled-system';
import { Icon } from '../Icon';
var IconContainer = styled(Icon).withConfig({
  displayName: "IconButton__IconContainer",
  componentId: "sc-407jqq-0"
})(["position:relative;z-index:2;"]); // Seeing as IconButton doesn't have fixed variants and/or sizes and is pure CSS, it's all here.

var IconButtonContainer = styled.button.withConfig({
  displayName: "IconButton__IconButtonContainer",
  componentId: "sc-407jqq-1"
})(["margin:0;padding:0;border:none;position:relative;cursor:pointer;background:none;", " &::before,&::after{content:'';display:block;position:absolute;top:50%;left:50%;width:calc(100% + 8px);height:calc(100% + 8px);border-radius:50%;transition:opacity 0.15s ease-in-out,transform 0.15s ease-in-out;transform:translate(-50%,-50%) scale(0.75);pointer-events:none;opacity:0;z-index:1;}&::before{background-color:", ";}&:hover{&::before{opacity:1;transform:translate(-50%,-50%) scale(1);}}&:focus{outline:none;&::after{background-color:", ";opacity:1;transform:translate(-50%,-50%);}}&:disabled{cursor:default;opacity:0.5;&::before,&::after{content:none;}}"], space, function (_ref) {
  var discColor = _ref.discColor,
      theme = _ref.theme;
  return get(theme.colors, discColor || 'grey.lighter');
}, function (_ref2) {
  var discColor = _ref2.discColor,
      theme = _ref2.theme;
  return get(theme.colors, discColor || 'grey.lighter');
});
var IconButton = /*#__PURE__*/forwardRef(function (_ref3, ref) {
  var _ref3$disabled = _ref3.disabled,
      disabled = _ref3$disabled === void 0 ? false : _ref3$disabled,
      onClick = _ref3.onClick,
      discColor = _ref3.discColor,
      size = _ref3.size,
      color = _ref3.color,
      component = _ref3.component,
      spin = _ref3.spin,
      otherStyleProps = _objectWithoutPropertiesLoose(_ref3, _excluded);

  return /*#__PURE__*/React.createElement(IconButtonContainer, _extends({
    ref: ref,
    onClick: onClick,
    discColor: discColor,
    disabled: disabled
  }, otherStyleProps), /*#__PURE__*/React.createElement(IconContainer, {
    size: size,
    component: component,
    color: color,
    spin: spin
  }));
});
export default IconButton;