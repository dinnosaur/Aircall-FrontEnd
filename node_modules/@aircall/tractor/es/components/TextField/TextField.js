import React from 'react';
import styled from 'styled-components';
import { CloseOutlined, Icon } from '../Icon';
import { IconButton } from '../IconButton';
var LeftIcon = styled(Icon).withConfig({
  displayName: "TextField__LeftIcon",
  componentId: "sc-1ythfz5-0"
})(["position:absolute;top:50%;left:16px;transform:translateY(-50%);pointer-events:none;"]);
var ClearButton = styled(IconButton).withConfig({
  displayName: "TextField__ClearButton",
  componentId: "sc-1ythfz5-1"
})(["position:absolute;top:50%;right:", ";background-color:transparent;border:none;transform:translateY(-50%);", ""], function (_ref) {
  var theme = _ref.theme;
  return theme.space.s + "px";
}, function (props) {
  return props.clearIconStyle;
});
var TextFieldContainer = styled.div.withConfig({
  displayName: "TextField__TextFieldContainer",
  componentId: "sc-1ythfz5-2"
})(["position:relative;width:100%;"]);

function TextField(_ref2) {
  var onClear = _ref2.onClear,
      icon = _ref2.icon,
      children = _ref2.children,
      clearIconStyle = _ref2.clearIconStyle,
      error = _ref2.error;
  return /*#__PURE__*/React.createElement(TextFieldContainer, null, icon && /*#__PURE__*/React.createElement(LeftIcon, {
    component: icon
  }), React.Children.only(children), !!onClear && /*#__PURE__*/React.createElement(ClearButton, {
    type: "button",
    size: 16,
    component: CloseOutlined,
    onClick: onClear,
    color: error ? 'red.base' : undefined,
    clearIconStyle: clearIconStyle
  }));
}

export default TextField;