import { BoundaryAlignmentProps, Positions } from '../BoundaryAlignment';
import { OptionTypeBase, GetOptionLabel, GetOptionValue, GroupType, DefaultOptionType } from '.';
/**
 * It accepts option and the label resolver function
 * @param option
 * @param getOptionLabel
 * @returns the option label
 */
export declare function optionLabel<Option extends OptionTypeBase = DefaultOptionType>(option: Option, getOptionLabel?: GetOptionLabel<Option>): any;
/**
 * It accepts option and the value resolver function
 * @param option
 * @param getOptionLabel
 * @returns the option value
 */
export declare function optionValue<Option extends OptionTypeBase = DefaultOptionType>(option: Option, getOptionValue?: GetOptionValue<Option>): any;
export declare function isGroupType<Option>(element: Option | GroupType<Option>): element is GroupType<Option>;
export declare function isItemSelected<Option>(item: Option, selectedValue: Option | Option[], getOptionValue?: GetOptionLabel<Option>): boolean;
export declare const calculateDropdownMaxHeight: ({ boundaryElement, containerBoundingBox, position, offset }: {
    boundaryElement: Window | HTMLElement;
    containerBoundingBox: ClientRect;
    position: Positions;
    offset: BoundaryAlignmentProps['offset'];
}) => number;
