/// <reference types="react" />
import { FormItemStatuses } from '../..';
import { ComponentSizes } from '../../../declarations/common.decl';
export declare const DropdownContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, import("../..").BoxProps & import("../..").FlexProps & {
    flexDirection: string;
    backgroundColor: string;
    boxShadow: number;
    borderRadius: number;
    borderWidth: string;
    borderStyle: string;
    borderColor: string;
    minWidth: string;
}, "minWidth" | "boxShadow" | "borderWidth" | "borderStyle" | "borderColor" | "borderRadius" | "backgroundColor" | "flexDirection">;
export declare const CustomInput: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../../TextField").TextFieldProps<HTMLInputElement> & {
    size?: "small" | "large" | "regular" | "xSmall" | undefined;
    variant?: "input" | "list" | undefined;
} & import("react").RefAttributes<HTMLInputElement>>, import("styled-components").DefaultTheme, {
    dropdownPosition?: "top" | "bottom" | undefined;
}, never>;
interface TriggerContainerProps {
    triggerSize: ComponentSizes;
    validationStatus?: FormItemStatuses;
    disabled: boolean;
}
export declare const TriggerContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, import("../..").BoxProps & import("../..").GridProps & {
    alignItems: string;
    borderWidth: string;
    borderStyle: string;
    backgroundColor: string;
    cursor: string;
    borderRadius: number;
    px: string;
} & TriggerContainerProps, "cursor" | "px" | "borderWidth" | "borderStyle" | "borderRadius" | "backgroundColor" | "alignItems">;
export declare const SelectGroupLabel: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
    size: ComponentSizes;
}, never>;
export {};
