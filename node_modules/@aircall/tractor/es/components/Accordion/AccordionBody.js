import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
var _excluded = ["children"];
import React, { useContext } from 'react';
import { AnimatePresence, motion } from 'framer-motion';
import styled from 'styled-components';
import { AccordionMainContext, AccordionSubContext } from './context';
var AccordionBodyWrapper = styled(motion.div).withConfig({
  displayName: "AccordionBody__AccordionBodyWrapper",
  componentId: "sc-xi7bs7-0"
})(["z-index:0;display:block;width:100%;max-height:100%;flex-shrink:1;overflow-y:auto;"]);
var animationVariants = {
  enter: {
    opacity: 1,
    height: 'max-content',
    transition: {
      duration: 0.5,
      ease: 'easeInOut'
    }
  },
  exit: {
    opacity: 0,
    height: 0,
    transition: {
      duration: 0.5,
      ease: 'easeInOut'
    },
    overflow: 'hidden'
  }
};
export var AccordionBody = function AccordionBody(_ref) {
  var children = _ref.children,
      styleProps = _objectWithoutPropertiesLoose(_ref, _excluded);

  var _useContext = useContext(AccordionMainContext),
      selectedItemId = _useContext.selectedItemId;

  var _useContext2 = useContext(AccordionSubContext),
      id = _useContext2.id;

  return /*#__PURE__*/React.createElement(AnimatePresence, null, selectedItemId === id && /*#__PURE__*/React.createElement(AccordionBodyWrapper, _extends({
    variants: animationVariants,
    initial: "exit",
    animate: "enter",
    exit: "exit"
  }, styleProps), children));
};
AccordionBody.displayName = 'AccordionBody';