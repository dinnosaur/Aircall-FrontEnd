import React from 'react';
import { render, act } from '@testing-library/react';
import { Accordion } from '..';
import { AccordionMainContext } from '../context';
describe('components/Accordion/Accordion', function () {
  it('should provide open item and function to update open item through context', function () {
    var onItemClickMock = jest.fn();
    var accordionContext = {
      selectedItemId: null,
      onItemClick: onItemClickMock
    };
    render( /*#__PURE__*/React.createElement(Accordion.Container, {
      defaultSelected: 1
    }, /*#__PURE__*/React.createElement(Accordion.Item, {
      id: 1
    }, /*#__PURE__*/React.createElement(Accordion.Body, null, /*#__PURE__*/React.createElement(AccordionMainContext.Consumer, null, function (context) {
      accordionContext = context;
      return 'Test';
    })))));
    expect(accordionContext).toEqual({
      selectedItemId: 1,
      onItemClick: expect.any(Function)
    });
    act(function () {
      accordionContext.onItemClick(2);
    });
    expect(accordionContext.selectedItemId).toEqual(2);
  });
  it('should not accept anything else than a AccordionItem', function () {
    function DummyComponent() {
      return /*#__PURE__*/React.createElement("span", null, "DummyComponent");
    }

    DummyComponent.displayName = 'DummyComponent';
    expect(function () {
      return render( /*#__PURE__*/React.createElement(Accordion.Container, {
        defaultSelected: 1
      }, /*#__PURE__*/React.createElement(DummyComponent, null)));
    }).toThrowError('AccordionItem only allows AccordionItem as immediate children. Found invalid child DummyComponent.');
  });
});