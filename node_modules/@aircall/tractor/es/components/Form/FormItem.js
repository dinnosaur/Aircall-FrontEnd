import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
var _excluded = ["label", "name", "helpText", "validationStatus", "children"];
import React from 'react';
import { Grid } from '../Grid';
import { Typography } from '../Typography';
import { FormItemContext } from './context';
import { FormItemStatus } from './FormItem.decl';

var FormItem = function FormItem(_ref) {
  var label = _ref.label,
      name = _ref.name,
      helpText = _ref.helpText,
      validationStatus = _ref.validationStatus,
      children = _ref.children,
      otherStylingProps = _objectWithoutPropertiesLoose(_ref, _excluded);

  var helpTextColor = validationStatus === FormItemStatus.ERROR ? 'red.darker' : 'text.dark';
  var helpTextVariant = validationStatus === FormItemStatus.ERROR ? 'caption' : 'caption2';
  return /*#__PURE__*/React.createElement(FormItemContext.Provider, {
    value: {
      validationStatus: validationStatus,
      name: name
    }
  }, /*#__PURE__*/React.createElement(Grid, _extends({
    gridGap: "xxs"
  }, otherStylingProps), label && /*#__PURE__*/React.createElement(Typography, {
    textAlign: "start",
    color: "text.base",
    as: "label",
    htmlFor: name
  }, label), children, helpText && /*#__PURE__*/React.createElement(Typography, {
    textAlign: "start",
    color: helpTextColor,
    variant: helpTextVariant
  }, helpText)));
};

export default FormItem;