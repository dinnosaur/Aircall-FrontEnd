import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
var _excluded = ["id", "validationStatus", "resizable", "onClear"];
import React, { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { useTextField } from '../../hooks/useTextField';
import { TextField, makeDefaultField } from '../TextField';
var TextareaComponent = styled.textarea.withConfig({
  displayName: "Textarea__TextareaComponent",
  componentId: "sc-14up9by-0"
})(["", " min-height:108px;padding-top:", ";padding-bottom:", ";resize:", ";"], makeDefaultField, function (_ref) {
  var theme = _ref.theme;
  return theme.space.s + "px";
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.space.s + "px";
}, function (_ref3) {
  var resizable = _ref3.resizable;
  return resizable ? 'vertical' : 'none';
});
var clearIconStyle = css(["top:", ";right:", ";transform:none;"], function (_ref4) {
  var theme = _ref4.theme;
  return theme.space.s + "px";
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.space.s + "px";
});
/**
 * Textarea component.
 * @description Figma specs https://www.figma.com/file/6HfVoWxocYbsm1Wto1Hqr7/(WIP)-00.-Tractor---Desktop?node-id=2013%3A0
 */

var Textarea = /*#__PURE__*/forwardRef(function (props, ref) {
  var id = props.id,
      validationStatus = props.validationStatus,
      _props$resizable = props.resizable,
      resizable = _props$resizable === void 0 ? false : _props$resizable,
      onClear = props.onClear,
      textareaProps = _objectWithoutPropertiesLoose(props, _excluded);

  var _useTextField = useTextField({
    id: id,
    validationStatus: validationStatus,
    onClear: onClear
  }),
      componentStatus = _useTextField.componentStatus,
      componentId = _useTextField.componentId,
      error = _useTextField.error,
      hasLeftIcon = _useTextField.hasLeftIcon,
      hasClearIcon = _useTextField.hasClearIcon;

  return /*#__PURE__*/React.createElement(TextField, {
    error: error,
    clearIconStyle: clearIconStyle,
    onClear: onClear
  }, /*#__PURE__*/React.createElement(TextareaComponent, _extends({
    ref: ref,
    "data-test": "textarea",
    resizable: resizable,
    id: componentId,
    validationStatus: componentStatus,
    hasLeftIcon: hasLeftIcon,
    hasClearIcon: hasClearIcon
  }, textareaProps)));
});
export default Textarea;