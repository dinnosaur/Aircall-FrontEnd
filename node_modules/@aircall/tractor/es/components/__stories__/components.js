import React, { useCallback, useState } from 'react';
import { Button } from '../Button';
import { Spacer, SpaceVariant } from '../Spacer';
export var IOCContainer = function IOCContainer(_ref) {
  var _ref$idleValue = _ref.idleValue,
      idleValue = _ref$idleValue === void 0 ? false : _ref$idleValue,
      _ref$activeValue = _ref.activeValue,
      activeValue = _ref$activeValue === void 0 ? true : _ref$activeValue,
      _ref$label = _ref.label,
      label = _ref$label === void 0 ? 'External Toggle' : _ref$label,
      children = _ref.children;

  var _useState = useState(idleValue),
      value = _useState[0],
      setValue = _useState[1];

  var handleChange = useCallback(function (state) {
    setValue(state);
  }, []);
  return /*#__PURE__*/React.createElement(Spacer, {
    direction: "vertical",
    space: SpaceVariant.L
  }, /*#__PURE__*/React.createElement(Button, {
    onClick: function onClick() {
      return setValue(value === idleValue ? activeValue : idleValue);
    }
  }, label), children(value, handleChange));
};