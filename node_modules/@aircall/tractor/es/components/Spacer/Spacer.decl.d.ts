import { MouseEventHandler, ReactNode } from 'react';
import { BorderProps, SpaceProps } from 'styled-system';
import { ComponentWithAs } from '../../declarations/styled-components.decl';
import { Theme } from '../../styles/theme';
import { FlexProps } from '../Flex';
declare type SpaceFlexProps = Pick<FlexProps, 'alignItems' | 'justifyContent' | 'flexWrap' | 'width' | 'cursor'> & SpaceProps & BorderProps & {
    onClick?: MouseEventHandler;
};
export interface ContainerProps extends SpaceFlexProps {
    wrapSpace?: SpaceProps['m'];
    direction: SpacerDirections;
    fluid?: boolean;
    reverse: boolean;
}
export interface SpacerProps extends SpaceFlexProps, ComponentWithAs {
    /**
     * The space between the children
     */
    space?: SpaceProps['m'];
    /**
     * The space between lines when the items are forced to be wrapped onto multiple lines.
     */
    wrapSpace?: SpaceProps['m'];
    /**
     * The space direction
     */
    direction?: SpacerDirections;
    /**
     * Either to take the parent's width or not
     */
    fluid?: boolean;
    /**
     * Either to reverse the order of the children or not
     */
    reverse?: boolean;
    children: ReactNode;
    itemsSized?: 'auto' | 'evenly-sized';
}
export declare enum SpacerDirection {
    VERTICAL = "vertical",
    HORIZONTAL = "horizontal"
}
export declare type SpacerDirections = 'vertical' | 'horizontal';
export declare enum SpaceVariant {
    XXXS = "xxxs",
    XXS = "xxs",
    XS = "xs",
    S = "s",
    M = "m",
    L = "l",
    XL = "xl",
    XXL = "xxl",
    XXXL = "xxxl"
}
export declare type SpaceVariants = keyof Theme['space'];
export {};
