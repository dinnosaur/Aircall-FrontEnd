import { HTMLAttributes, ChangeEvent, ReactNode } from 'react';
import { ComponentSizes } from '../../declarations/common.decl';
import { FormItemStatuses } from '../Form';
import { SpacerProps } from '../Spacer';
export interface RadioProps {
    /**
     * Input validation status.
     *
     * Possible values are `success` or `error`
     */
    validationStatus?: FormItemStatuses;
    /**
     * A string value that identifies a given radio. it should be unique inside of the same group.
     */
    value: any;
    /**
     * Defines the size of the radio button.
     *
     * Possible values: `small` | `regular` | `large`
     **/
    size?: ComponentSizes;
    /**
     * Disables the Radio component
     */
    disabled?: boolean;
    children?: ReactNode;
}
export interface RadioContainerProps {
    checked: boolean;
    disabled: boolean;
    size: ComponentSizes;
    error?: boolean;
}
export interface RadioIndicatorProps {
    checked: boolean;
    disabled: boolean;
    size: ComponentSizes;
    error?: boolean;
}
export interface CustomRadioGroupProps extends SpacerProps {
    /**
     * Input validation status.
     *
     * Possible values are `success` or `error`
     */
    validationStatus?: FormItemStatuses;
    /**
     * This value will be used to see which radio button is checked.
     *
     * All the next changes needs to be handled by the parent using the onChange function.
     */
    value?: any;
    /**
     * This value will be used as an initial value for the radio group.
     */
    defaultValue?: any;
    /**
     * If all the radio buttons are disabled
     */
    disabled?: boolean;
    /**
     * Defines the size of the Radio component.
     *
     * Possible values: `small` | `regular` | `large`
     **/
    size?: ComponentSizes;
    /**
     * Set event handler for the "change" event
     */
    onChange?: (value: any, event: ChangeEvent<HTMLInputElement>) => void;
}
export interface RadioGroupProps extends CustomRadioGroupProps, Omit<HTMLAttributes<HTMLDivElement>, keyof CustomRadioGroupProps> {
}
