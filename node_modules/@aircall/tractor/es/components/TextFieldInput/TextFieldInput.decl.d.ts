import { UseTextFieldReturn } from '../../hooks/useTextField';
import { TextFieldProps } from '../TextField';
export declare enum TextFieldVariants {
    INPUT = "input",
    LIST = "list"
}
export declare const TextFieldInputSize: {
    readonly SMALL: "small";
    readonly REGULAR: "regular";
    readonly LARGE: "large";
    readonly X_SMALL: "xSmall";
};
export declare type TextFieldInputVariant = 'input' | 'list';
export declare type TextFieldInputSizes = typeof TextFieldInputSize[keyof typeof TextFieldInputSize];
export interface TextFieldInputContainerProps {
    size: TextFieldInputSizes;
}
export declare type TextFieldVariant = 'input' | 'list';
export declare type TextFieldInputProps = TextFieldProps<HTMLInputElement> & {
    /**
     * The size of the Text Field Input.
     *
     * Possible values: `xSmall` | `small` | `regular` | `large`
     */
    size?: TextFieldInputSizes;
    /**
     * Two possible variants for the TextField: "input" and "list".
     */
    variant?: TextFieldVariant;
};
export declare type TextFieldInputComponentProps = TextFieldInputProps & Pick<UseTextFieldReturn, 'componentSize' | 'hasLeftIcon' | 'hasClearIcon'>;
