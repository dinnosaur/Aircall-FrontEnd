var _TYPOGRAHY_VARIANTS, _TYPOGRAHY_PADDINGS;

import { TypographyVariant } from '../Typography';
import { CounterBadgeSize } from './CounterBadge.decl';
export var makeBadgeVariant = function makeBadgeVariant(_ref) {
  var variant = _ref.variant,
      theme = _ref.theme;
  var variants = {
    destructive: {
      backgroundColor: theme.colors.red.base,
      textColor: theme.colors.base.white
    },
    black: {
      backgroundColor: theme.colors.base.black,
      textColor: theme.colors.base.white
    }
  };
  var _variants$variant = variants[variant],
      backgroundColor = _variants$variant.backgroundColor,
      textColor = _variants$variant.textColor;
  return {
    backgroundColor: backgroundColor,
    color: textColor
  };
};
export var makeBadgeSize = function makeBadgeSize(_ref2) {
  var size = _ref2.size,
      theme = _ref2.theme;
  var _theme$counterBadge$s = theme.counterBadge.sizes[size],
      minWidth = _theme$counterBadge$s.minWidth,
      maxWidth = _theme$counterBadge$s.maxWidth,
      height = _theme$counterBadge$s.height;
  return {
    minWidth: minWidth,
    maxWidth: maxWidth,
    height: height,
    borderRadius: height / 2
  };
};
export var makeBadgePosition = function makeBadgePosition(_ref3) {
  var hasChildren = _ref3.hasChildren;

  if (!hasChildren) {
    return;
  }

  return {
    position: 'absolute',
    right: '-4px',
    top: '-4px'
  };
}; // Props that should not be forwarded to the HTML DOM elements

export var shouldForwardProp = function shouldForwardProp(prop, defaultValidationFn) {
  return !['height', 'width', 'color', 'display'].includes(prop) && defaultValidationFn(prop);
};
export var TYPOGRAHY_VARIANTS = (_TYPOGRAHY_VARIANTS = {}, _TYPOGRAHY_VARIANTS[CounterBadgeSize.SMALL] = TypographyVariant.OVERLINE, _TYPOGRAHY_VARIANTS[CounterBadgeSize.REGULAR] = TypographyVariant.CAPTION, _TYPOGRAHY_VARIANTS[CounterBadgeSize.LARGE] = TypographyVariant.CAPTION, _TYPOGRAHY_VARIANTS);
export var TYPOGRAHY_PADDINGS = (_TYPOGRAHY_PADDINGS = {}, _TYPOGRAHY_PADDINGS[CounterBadgeSize.SMALL] = '4px', _TYPOGRAHY_PADDINGS[CounterBadgeSize.REGULAR] = '8px', _TYPOGRAHY_PADDINGS[CounterBadgeSize.LARGE] = '8px', _TYPOGRAHY_PADDINGS);