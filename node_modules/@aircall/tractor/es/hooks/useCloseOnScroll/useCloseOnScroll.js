import { useCallback, useEffect } from 'react';
export var useCloseOnScroll = function useCloseOnScroll(options) {
  var container = options.container,
      node = options.node,
      onClose = options.onClose;
  /**
   * Invoke the callback when the user scrolls outside of the node.
   */

  var handleScroll = useCallback(function (event) {
    var target = event.target;
    var hasScrolledInsideOfPortal = node.contains(target);

    if (!hasScrolledInsideOfPortal) {
      onClose();
    }
  }, [node, onClose]);
  useEffect(function () {
    if (!node) {
      return;
    } // the 3rd option of the addEventListener indicate that the scroll event
    // will be bubbled upward through the DOM tree


    container.addEventListener('scroll', handleScroll, true);
    return function () {
      container.removeEventListener('scroll', handleScroll, true);
    };
  }, [container, handleScroll, node]);
};