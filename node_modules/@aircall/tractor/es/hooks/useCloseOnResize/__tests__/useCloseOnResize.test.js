import React from 'react';
import { renderHook } from '@testing-library/react-hooks';
import { useCloseOnResize } from '..';
import { fireEvent, render } from '../../../tests/test-utils';

var renderComponent = function renderComponent() {
  var _render = render( /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    "data-test": "trigger-node"
  }, "Hello"), /*#__PURE__*/React.createElement("div", {
    "data-test": "portal-node"
  }))),
      getByTestId = _render.getByTestId;

  var portalNode = getByTestId('portal-node');
  var triggerNode = getByTestId('trigger-node');
  return {
    portalNode: portalNode,
    triggerNode: triggerNode
  };
};

describe('useCloseOnResize', function () {
  it('should invoke the onClose callback if the container is being resized', function () {
    var _renderComponent = renderComponent(),
        portalNode = _renderComponent.portalNode;

    var onClose = jest.fn();
    var onResize = jest.fn();
    window.addEventListener('resize', onResize, false);
    renderHook(function () {
      return useCloseOnResize({
        node: portalNode,
        onClose: onClose
      });
    });
    fireEvent(window, new Event('resize'));
    expect(onResize).toHaveBeenCalled();
    expect(onClose).toHaveBeenCalled();
  });
});