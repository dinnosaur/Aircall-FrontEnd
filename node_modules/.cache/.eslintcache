[{"/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/index.js":"1","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/App.js":"2","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/reportWebVitals.js":"3","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/API.js":"4","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallList.js":"5","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/AppStyling.js":"6","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallInformation.js":"7"},{"size":587,"mtime":1642691241038,"results":"8","hashOfConfig":"9"},{"size":2130,"mtime":1643395365318,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1642005316735,"results":"11","hashOfConfig":"9"},{"size":1351,"mtime":1643309446049,"results":"12","hashOfConfig":"9"},{"size":2134,"mtime":1643395086469,"results":"13","hashOfConfig":"9"},{"size":1480,"mtime":1643393301247,"results":"14","hashOfConfig":"9"},{"size":2895,"mtime":1643395265572,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"abfns9",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/index.js",[],["35","36"],"/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/App.js",["37"],"/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/reportWebVitals.js",[],"/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/API.js",["38"],"const BASE_URL = 'https://frontend-test-api.aircall.io/';\n\nconst authenticate = () => {\n  const configurationObject = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    },\n    body: JSON.stringify({\n      username: 'Dinno',\n      password: 'crebdrug'\n    })\n  };\n\n  return fetch(BASE_URL + 'auth/login', configurationObject);\n};\n\nconst refreshAuthentication = refreshToken => {\n  const configurationObject = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${refreshToken}`\n    }\n  };\n\n  return fetch(BASE_URL + 'auth/refresh-token-v2', configurationObject);\n};\n\nconst getCalls = (authToken, offset) => {\n  // if statement for when displaying certain number of paqes\n  return fetch(BASE_URL + `calls?offset=${offset}&limit=7`, {\n    headers: { Authorization: `Bearer ${authToken}` }\n  });\n};\n\nconst archiveCall = (authToken, id) => {\n  const configurationObject = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${authToken}`\n    }\n  };\n\n  return fetch(BASE_URL + `calls/${id}/archive`, configurationObject);\n};\n\nexport default {\n  authenticate,\n  refreshAuthentication,\n  getCalls,\n  archiveCall\n};\n","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallList.js",["39"],"import API from '../API';\nimport { useEffect, useState } from 'react';\nimport {\n  Button,\n  Spacer,\n  CallFilled,\n  Typography,\n  Divider\n} from '@aircall/tractor';\n\nimport AppStyling from '../AppStyling';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@mui/material/Pagination';\n\nconst useStyles = makeStyles(AppStyling);\n\nconst CallList = ({ token, setCall }) => {\n  const classes = useStyles();\n  const [calls, setCalls] = useState([]);\n  const [page, setPage] = useState(0);\n\n  // fetch all call using the token\n  useEffect(() => {\n    API.getCalls(token, page)\n      .then(resp => resp.json())\n      .then(data => {\n        setCalls(data);\n      });\n  }, [page]);\n\n  return (\n    <>\n      <div className={classes.callListContainer}>\n        <Spacer space=\"s\" width=\"100% !important\" direction=\"vertical\">\n          {displayCalls(sortbyDate(calls.nodes), classes, setCall)}\n        </Spacer>\n        <Pagination\n          className={classes.pagination}\n          count={calls.totalCount ? calls.totalCount - 1 : 1}\n          page={page + 1}\n          onChange={(event, value) => handlePage(event, value, setPage)}\n        />\n      </div>\n    </>\n  );\n};\n\nconst handlePage = (event, value, setPage) => {\n  setPage(parseInt(value) - 1);\n};\n\nconst displayCalls = (calls, classes, setCall) => {\n  if (calls !== undefined && calls.length > 1) {\n    return calls.map(call => {\n      return (\n        <>\n          <div key={call.id} className={classes.call}>\n            <Button onClick={() => setCall(call)}>\n              <CallFilled />\n              {call.from}\n            </Button>\n            <Divider className=\"divider\" orientation=\"vertical\" size=\"4px\" />\n            <Typography className=\"callDate\">\n              {call.created_at.slice(0, 19).replace('T', ' ')}\n            </Typography>\n          </div>\n        </>\n      );\n    });\n  }\n};\n/// sort all the fetched calls by date in a descending order\nconst sortbyDate = calls => {\n  if (calls !== undefined) {\n    return calls.sort(\n      (a, b) => Date.parse(b.created_at) - Date.parse(a.created_at)\n    );\n  }\n};\n\nexport default CallList;\n","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/AppStyling.js",["40"],"const AppStyling = {\n  app: {\n    width: '75vw',\n    height: '95vh',\n    margin: ' 0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    margin: '0 auto',\n    borderRadius: '4px',\n    background: 'rgb(255, 255, 255)',\n    boxShadow: 'rgba(0, 0, 0, 0.1) 0px 1px 3px 0px',\n    border: '1px solid rgba(0, 0, 0, 0.1)'\n  },\n  title: {\n    textAlign: 'center',\n    color: '#00B388',\n    paddingBottom: '20px'\n  },\n  call: {\n    display: 'flex',\n    flexDirection: 'row',\n    gap: '7%',\n    '& button': {\n      width: '50%'\n    },\n    '& .callDate': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end'\n    },\n    '& .divider': {\n      height: 'inherit'\n    }\n  },\n  callListContainer: {\n    width: '50%',\n    height: '67%',\n    margin: '70px auto'\n  },\n  pagination: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '18%'\n  },\n  callInformation: {\n    width: '45vw',\n    textAlign: 'center',\n    margin: '60px auto',\n    '& h2': {\n      color: '#00B388'\n    }\n  },\n  callNotes: {\n    width: '45vw',\n    textAlign: 'center',\n    margin: '60px auto'\n  },\n  archives: {\n    position: 'relative'\n  },\n  archiveButton: {\n    position: 'absolute !important',\n    top: '-14px',\n    right: '-150px',\n    width: '11vw'\n  },\n  backButton: {\n    right: '10vw',\n    top: '40px',\n    position: 'absolute !important',\n    marginLeft: '50px',\n    width: '11vw'\n  }\n};\n\nexport default AppStyling;\n","/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallInformation.js",["41","42"],"import API from '../API';\nimport { Divider, Typography, Spacer, Button } from '@aircall/tractor';\n\nimport AppStyling from '../AppStyling';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(AppStyling);\n\nconst CallInformation = ({ call, token, setCall }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.callInformation}>\n        <Button onClick={() => setCall(false)} className={classes.backButton}>\n          {'<---'}\n        </Button>\n        <Spacer\n          space=\"xs\"\n          width=\"100% !important\"\n          direction=\"vertical\"\n          justifyItems=\"center\"\n          width=\"30vw\"\n        >\n          <h2>Call details:</h2>\n          <Typography>From: {call.from}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>\n            Time: {call.created_at.slice(0, 19).replace('T', ' ')}\n          </Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Call Type: {call.call_type}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>To: {call.to}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Via: {call.via}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Duration: {call.duration} Seconds</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <div className={classes.archives}>\n            <Typography>Archived: {call.is_archived ? 'yes' : 'no'}</Typography>\n            <Button\n              onClick={() => handleArchiveButton(setCall, token, call)}\n              className={classes.archiveButton}\n            >\n              {call.is_archived ? 'Unarchive' : 'Archive'}\n            </Button>\n          </div>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n        </Spacer>\n      </div>\n      <div className={classes.callInformation}>\n        <h2>Notes:</h2>\n        <Spacer\n          space=\"xs\"\n          width=\"100% !important\"\n          direction=\"vertical\"\n          justifyItems=\"center\"\n          width=\"30vw\"\n        >\n          {displayNotes(call.notes)}\n        </Spacer>\n      </div>\n    </>\n  );\n};\n\nconst displayNotes = notes => {\n  if (notes.length !== 0) {\n    return notes.map((note, index) => {\n      return (\n        <Typography key={index}>\n          {index + 1}. {note.content}{' '}\n        </Typography>\n      );\n    });\n  } else {\n    return <Typography>No notes added.</Typography>;\n  }\n};\n\nconst handleArchiveButton = (setCall, token, call) => {\n  API.archiveCall(token, call.id)\n    .then(resp => resp.json())\n    .then(data => {\n      setCall(data);\n    });\n};\n\nexport default CallInformation;\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":63,"column":6,"nodeType":"49","endLine":63,"endColumn":17,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":52,"column":1,"nodeType":"53","endLine":57,"endColumn":3},{"ruleId":"47","severity":1,"message":"54","line":30,"column":6,"nodeType":"49","endLine":30,"endColumn":12,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":10,"column":5,"nodeType":"58","messageId":"59","endLine":10,"endColumn":11},{"ruleId":"60","severity":1,"message":"61","line":24,"column":11,"nodeType":"62","messageId":"63","endLine":24,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":60,"column":11,"nodeType":"62","messageId":"63","endLine":60,"endColumn":23},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshToken'. Either include it or remove the dependency array.","ArrayExpression",["66"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["67"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [authToken, refreshToken]",{"range":"72","text":"73"},"Update the dependencies array to be: [page, token]",{"range":"74","text":"75"},[1706,1717],"[authToken, refreshToken]",[693,699],"[page, token]"]