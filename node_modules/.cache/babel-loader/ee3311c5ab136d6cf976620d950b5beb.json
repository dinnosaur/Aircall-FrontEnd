{"ast":null,"code":"var _jsxFileName = \"/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallInformation.js\",\n    _s = $RefreshSig$();\n\nimport API from '../API';\nimport { useEffect, useState } from 'react';\nimport { Divider, Typography, Spacer } from '@aircall/tractor';\nimport AppStyling from '../AppStyling';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(AppStyling);\n\nconst CallInformation = _ref => {\n  _s();\n\n  let {\n    call,\n    token\n  } = _ref;\n  const classes = useStyles();\n  useEffect(() => {\n    API.archiveCall(token).then(resp => resp.json()).then(data => {\n      console.log(data);\n      setCalls(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.callInformation,\n      children: /*#__PURE__*/_jsxDEV(Spacer, {\n        space: \"xs\",\n        width: \"100% !important\",\n        direction: \"vertical\",\n        justifyItems: \"center\",\n        width: \"30vw\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Call details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"From: \", call.from]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Time: \", call.created_at.slice(0, 19).replace('T', ' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Call Type: \", call.call_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"To: \", call.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Via: \", call.via]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Duration: \", call.duration, \" Seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Archived: \", call.is_archived ? 'yes' : 'no']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.callInformation,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n        space: \"xs\",\n        width: \"100% !important\",\n        direction: \"vertical\",\n        justifyItems: \"center\",\n        width: \"30vw\",\n        children: displayNotes(call.notes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CallInformation, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = CallInformation;\n\nconst displayNotes = notes => {\n  return notes.map((note, index) => {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: [index + 1, \". \", note.content, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  });\n};\n\nexport default CallInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallInformation\");","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallInformation.js"],"names":["API","useEffect","useState","Divider","Typography","Spacer","AppStyling","makeStyles","useStyles","CallInformation","call","token","classes","archiveCall","then","resp","json","data","console","log","setCalls","callInformation","from","created_at","slice","replace","call_type","to","via","duration","is_archived","displayNotes","notes","map","note","index","content"],"mappings":"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","sourcesContent":["import API from '../API';\nimport { useEffect, useState } from 'react';\nimport { Divider, Typography, Spacer } from '@aircall/tractor';\n\nimport AppStyling from '../AppStyling';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(AppStyling);\n\nconst CallInformation = ({ call, token }) => {\n  const classes = useStyles();\n  useEffect(() => {\n    API.archiveCall(token)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        setCalls(data);\n      });\n  }, []);\n  return (\n    <>\n      <div className={classes.callInformation}>\n        <Spacer\n          space=\"xs\"\n          width=\"100% !important\"\n          direction=\"vertical\"\n          justifyItems=\"center\"\n          width=\"30vw\"\n        >\n          <h2>Call details</h2>\n          <Typography>From: {call.from}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>\n            Time: {call.created_at.slice(0, 19).replace('T', ' ')}\n          </Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Call Type: {call.call_type}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>To: {call.to}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Via: {call.via}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Duration: {call.duration} Seconds</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Archived: {call.is_archived ? 'yes' : 'no'}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n        </Spacer>\n      </div>\n      <div className={classes.callInformation}>\n        <h2>Notes:</h2>\n        <Spacer\n          space=\"xs\"\n          width=\"100% !important\"\n          direction=\"vertical\"\n          justifyItems=\"center\"\n          width=\"30vw\"\n        >\n          {displayNotes(call.notes)}\n        </Spacer>\n      </div>\n    </>\n  );\n};\n\nconst displayNotes = notes => {\n  return notes.map((note, index) => {\n    return (\n      <Typography>\n        {index + 1}. {note.content}{' '}\n      </Typography>\n    );\n  });\n};\n\nexport default CallInformation;\n"]},"metadata":{},"sourceType":"module"}