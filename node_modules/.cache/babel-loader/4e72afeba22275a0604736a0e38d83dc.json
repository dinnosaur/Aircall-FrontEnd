{"ast":null,"code":"import { css } from 'styled-components';\nimport { ButtonMode, ButtonVariant } from './Button.decl';\n/**\n * Themes the button according to variant, disabled and the mode of the button.\n * Check this figma link for more details: https://www.figma.com/file/2D5oejKfR6yZJ3Qh6ZHgmu/(TEST)-00.-Tractor---Foundation\n */\n\nexport var makeButtonVariant = function makeButtonVariant(_ref) {\n  var variant = _ref.variant,\n      disabled = _ref.disabled,\n      mode = _ref.mode,\n      readOnly = _ref.readOnly,\n      theme = _ref.theme;\n\n  var getBackgroundColor = function getBackgroundColor(color) {\n    return mode !== ButtonMode.FILL ? 'transparent' : color;\n  };\n\n  var getTextColor = function getTextColor(color, defaultTextColor) {\n    return mode !== ButtonMode.FILL ? color : defaultTextColor;\n  };\n\n  var getBorderColor = function getBorderColor(color) {\n    return mode === ButtonMode.LINK ? 'transparent' : color;\n  };\n\n  if (disabled) {\n    return {\n      // Fix issue when the disabled button is used inside of a Tooltip\n      // the mouseEnter and mouseLeave events are not trigger sometimes\n      // which makes the tooltip stay on the UI.\n      // To \"partially\" resolve this React issue, we don't capture any events\n      // when the button is disabled.\n      // ref: https://github.com/facebook/react/issues/4251\n      pointerEvents: 'none',\n      backgroundColor: getBackgroundColor(theme.colors.grey.base),\n      color: theme.colors.grey.dark,\n      borderColor: getBorderColor(theme.colors.grey.base),\n      cursor: 'not-allowed',\n      svg: {\n        fill: theme.colors.grey.dark\n      }\n    };\n  }\n\n  var makeButtonColor = function makeButtonColor(colorPalette, textColor) {\n    return {\n      backgroundColor: getBackgroundColor(colorPalette.base),\n      color: getTextColor(colorPalette.base, textColor),\n      borderColor: getBorderColor(colorPalette.base),\n      svg: {\n        fill: getTextColor(colorPalette.base, textColor)\n      },\n      ':hover': readOnly ? undefined : {\n        backgroundColor: getBackgroundColor(colorPalette.dark),\n        color: getTextColor(colorPalette.dark, textColor),\n        borderColor: getBorderColor(colorPalette.dark),\n        svg: {\n          fill: getTextColor(colorPalette.dark, textColor)\n        }\n      },\n      ':active': readOnly ? undefined : {\n        backgroundColor: getBackgroundColor(colorPalette.darker),\n        color: getTextColor(colorPalette.darker, textColor),\n        borderColor: getBorderColor(colorPalette.darker),\n        svg: {\n          fill: getTextColor(colorPalette.darker, textColor)\n        }\n      },\n      ':focus': readOnly ? undefined : {\n        backgroundColor: getBackgroundColor(colorPalette.darker),\n        color: getTextColor(colorPalette.darker, textColor),\n        borderColor: getBorderColor(colorPalette.darker),\n        svg: {\n          fill: getTextColor(colorPalette.darker, textColor)\n        }\n      }\n    };\n  };\n\n  var makeGhostButtonColor = function makeGhostButtonColor(colorPalette, textColor) {\n    return {\n      backgroundColor: colorPalette.base,\n      color: textColor,\n      svg: {\n        fill: textColor\n      },\n      ':hover': readOnly ? undefined : {\n        backgroundColor: colorPalette.light\n      },\n      ':active': readOnly ? undefined : {\n        backgroundColor: colorPalette.lighter\n      },\n      ':focus': readOnly ? undefined : {\n        backgroundColor: colorPalette.base,\n        borderColor: textColor\n      }\n    };\n  };\n\n  var createNeutralColorPalette = function createNeutralColorPalette(color) {\n    return {\n      darker: color,\n      dark: color,\n      base: color,\n      light: color,\n      lighter: color\n    };\n  };\n\n  var variants = {\n    primary: {\n      paletteColor: theme.colors.primary,\n      textColor: theme.colors.base.white\n    },\n    destructive: {\n      paletteColor: theme.colors.red,\n      textColor: theme.colors.base.white\n    },\n    instructive: {\n      paletteColor: theme.colors.blue,\n      textColor: theme.colors.base.white\n    },\n    warning: {\n      paletteColor: theme.colors.yellow,\n      textColor: theme.colors.typography.textColor\n    },\n    ghost: {\n      paletteColor: theme.colors.ghost,\n      textColor: theme.colors.base.white\n    },\n    darkGhost: {\n      paletteColor: theme.colors.darkGhost,\n      textColor: theme.colors.grey.darker\n    },\n    black: {\n      paletteColor: createNeutralColorPalette(theme.colors.text.base),\n      textColor: theme.colors.text.lighter\n    },\n    white: {\n      paletteColor: createNeutralColorPalette(theme.colors.text.lighter),\n      textColor: theme.colors.text.base\n    }\n  };\n\n  if (!variants[variant]) {\n    return;\n  }\n\n  var _variants$variant = variants[variant],\n      paletteColor = _variants$variant.paletteColor,\n      textColor = _variants$variant.textColor;\n  var buttonColorFn = variant === ButtonVariant.GHOST || variant === ButtonVariant.DARK_GHOST ? makeGhostButtonColor : makeButtonColor;\n  return buttonColorFn(paletteColor, textColor);\n};\nexport var makeButtonShadow = function makeButtonShadow(_ref2) {\n  var disabled = _ref2.disabled,\n      shadow = _ref2.shadow,\n      theme = _ref2.theme;\n\n  if (!shadow) {\n    return;\n  }\n\n  if (disabled) {\n    return css([\"box-shadow:\", \";\"], theme.shadows[5]);\n  }\n\n  return css([\"box-shadow:\", \";:hover{box-shadow:\", \";}:active{box-shadow:\", \";}:focus{box-shadow:\", \";}\"], theme.shadows[5], theme.shadows[6], theme.shadows[1], theme.shadows[5]);\n};\nexport var makeButtonTypography = function makeButtonTypography(_ref3) {\n  var mode = _ref3.mode,\n      disabled = _ref3.disabled,\n      theme = _ref3.theme;\n\n  if (mode === ButtonMode.LINK) {\n    return css([\"\", \" \", \"\"], theme.typography.variants.body, disabled ? undefined : css([\":hover,:active,:focus{text-decoration:underline;}\"]));\n  }\n\n  return css([\"\", \":hover,:active,:focus{text-decoration:none;}\"], theme.typography.variants.subheading);\n};\nexport var makeButtonSize = function makeButtonSize(_ref4) {\n  var mode = _ref4.mode,\n      buttonSize = _ref4.buttonSize,\n      theme = _ref4.theme;\n\n  if (mode === ButtonMode.LINK) {\n    return theme.link.sizes[buttonSize];\n  }\n\n  return theme.button.sizes[buttonSize];\n}; // Props that should not be forwarded to the HTML DOM elements\n\nexport var shouldForwardProp = function shouldForwardProp(prop) {\n  return !['mode'].includes(prop);\n};","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/components/Button/utils.js"],"names":["css","ButtonMode","ButtonVariant","makeButtonVariant","_ref","variant","disabled","mode","readOnly","theme","getBackgroundColor","color","FILL","getTextColor","defaultTextColor","getBorderColor","LINK","pointerEvents","backgroundColor","colors","grey","base","dark","borderColor","cursor","svg","fill","makeButtonColor","colorPalette","textColor","undefined","darker","makeGhostButtonColor","light","lighter","createNeutralColorPalette","variants","primary","paletteColor","white","destructive","red","instructive","blue","warning","yellow","typography","ghost","darkGhost","black","text","_variants$variant","buttonColorFn","GHOST","DARK_GHOST","makeButtonShadow","_ref2","shadow","shadows","makeButtonTypography","_ref3","body","subheading","makeButtonSize","_ref4","buttonSize","link","sizes","button","shouldForwardProp","prop","includes"],"mappings":"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","sourcesContent":["import { css } from 'styled-components';\nimport { ButtonMode, ButtonVariant } from './Button.decl';\n/**\n * Themes the button according to variant, disabled and the mode of the button.\n * Check this figma link for more details: https://www.figma.com/file/2D5oejKfR6yZJ3Qh6ZHgmu/(TEST)-00.-Tractor---Foundation\n */\n\nexport var makeButtonVariant = function makeButtonVariant(_ref) {\n  var variant = _ref.variant,\n      disabled = _ref.disabled,\n      mode = _ref.mode,\n      readOnly = _ref.readOnly,\n      theme = _ref.theme;\n\n  var getBackgroundColor = function getBackgroundColor(color) {\n    return mode !== ButtonMode.FILL ? 'transparent' : color;\n  };\n\n  var getTextColor = function getTextColor(color, defaultTextColor) {\n    return mode !== ButtonMode.FILL ? color : defaultTextColor;\n  };\n\n  var getBorderColor = function getBorderColor(color) {\n    return mode === ButtonMode.LINK ? 'transparent' : color;\n  };\n\n  if (disabled) {\n    return {\n      // Fix issue when the disabled button is used inside of a Tooltip\n      // the mouseEnter and mouseLeave events are not trigger sometimes\n      // which makes the tooltip stay on the UI.\n      // To \"partially\" resolve this React issue, we don't capture any events\n      // when the button is disabled.\n      // ref: https://github.com/facebook/react/issues/4251\n      pointerEvents: 'none',\n      backgroundColor: getBackgroundColor(theme.colors.grey.base),\n      color: theme.colors.grey.dark,\n      borderColor: getBorderColor(theme.colors.grey.base),\n      cursor: 'not-allowed',\n      svg: {\n        fill: theme.colors.grey.dark\n      }\n    };\n  }\n\n  var makeButtonColor = function makeButtonColor(colorPalette, textColor) {\n    return {\n      backgroundColor: getBackgroundColor(colorPalette.base),\n      color: getTextColor(colorPalette.base, textColor),\n      borderColor: getBorderColor(colorPalette.base),\n      svg: {\n        fill: getTextColor(colorPalette.base, textColor)\n      },\n      ':hover': readOnly ? undefined : {\n        backgroundColor: getBackgroundColor(colorPalette.dark),\n        color: getTextColor(colorPalette.dark, textColor),\n        borderColor: getBorderColor(colorPalette.dark),\n        svg: {\n          fill: getTextColor(colorPalette.dark, textColor)\n        }\n      },\n      ':active': readOnly ? undefined : {\n        backgroundColor: getBackgroundColor(colorPalette.darker),\n        color: getTextColor(colorPalette.darker, textColor),\n        borderColor: getBorderColor(colorPalette.darker),\n        svg: {\n          fill: getTextColor(colorPalette.darker, textColor)\n        }\n      },\n      ':focus': readOnly ? undefined : {\n        backgroundColor: getBackgroundColor(colorPalette.darker),\n        color: getTextColor(colorPalette.darker, textColor),\n        borderColor: getBorderColor(colorPalette.darker),\n        svg: {\n          fill: getTextColor(colorPalette.darker, textColor)\n        }\n      }\n    };\n  };\n\n  var makeGhostButtonColor = function makeGhostButtonColor(colorPalette, textColor) {\n    return {\n      backgroundColor: colorPalette.base,\n      color: textColor,\n      svg: {\n        fill: textColor\n      },\n      ':hover': readOnly ? undefined : {\n        backgroundColor: colorPalette.light\n      },\n      ':active': readOnly ? undefined : {\n        backgroundColor: colorPalette.lighter\n      },\n      ':focus': readOnly ? undefined : {\n        backgroundColor: colorPalette.base,\n        borderColor: textColor\n      }\n    };\n  };\n\n  var createNeutralColorPalette = function createNeutralColorPalette(color) {\n    return {\n      darker: color,\n      dark: color,\n      base: color,\n      light: color,\n      lighter: color\n    };\n  };\n\n  var variants = {\n    primary: {\n      paletteColor: theme.colors.primary,\n      textColor: theme.colors.base.white\n    },\n    destructive: {\n      paletteColor: theme.colors.red,\n      textColor: theme.colors.base.white\n    },\n    instructive: {\n      paletteColor: theme.colors.blue,\n      textColor: theme.colors.base.white\n    },\n    warning: {\n      paletteColor: theme.colors.yellow,\n      textColor: theme.colors.typography.textColor\n    },\n    ghost: {\n      paletteColor: theme.colors.ghost,\n      textColor: theme.colors.base.white\n    },\n    darkGhost: {\n      paletteColor: theme.colors.darkGhost,\n      textColor: theme.colors.grey.darker\n    },\n    black: {\n      paletteColor: createNeutralColorPalette(theme.colors.text.base),\n      textColor: theme.colors.text.lighter\n    },\n    white: {\n      paletteColor: createNeutralColorPalette(theme.colors.text.lighter),\n      textColor: theme.colors.text.base\n    }\n  };\n\n  if (!variants[variant]) {\n    return;\n  }\n\n  var _variants$variant = variants[variant],\n      paletteColor = _variants$variant.paletteColor,\n      textColor = _variants$variant.textColor;\n  var buttonColorFn = variant === ButtonVariant.GHOST || variant === ButtonVariant.DARK_GHOST ? makeGhostButtonColor : makeButtonColor;\n  return buttonColorFn(paletteColor, textColor);\n};\nexport var makeButtonShadow = function makeButtonShadow(_ref2) {\n  var disabled = _ref2.disabled,\n      shadow = _ref2.shadow,\n      theme = _ref2.theme;\n\n  if (!shadow) {\n    return;\n  }\n\n  if (disabled) {\n    return css([\"box-shadow:\", \";\"], theme.shadows[5]);\n  }\n\n  return css([\"box-shadow:\", \";:hover{box-shadow:\", \";}:active{box-shadow:\", \";}:focus{box-shadow:\", \";}\"], theme.shadows[5], theme.shadows[6], theme.shadows[1], theme.shadows[5]);\n};\nexport var makeButtonTypography = function makeButtonTypography(_ref3) {\n  var mode = _ref3.mode,\n      disabled = _ref3.disabled,\n      theme = _ref3.theme;\n\n  if (mode === ButtonMode.LINK) {\n    return css([\"\", \" \", \"\"], theme.typography.variants.body, disabled ? undefined : css([\":hover,:active,:focus{text-decoration:underline;}\"]));\n  }\n\n  return css([\"\", \":hover,:active,:focus{text-decoration:none;}\"], theme.typography.variants.subheading);\n};\nexport var makeButtonSize = function makeButtonSize(_ref4) {\n  var mode = _ref4.mode,\n      buttonSize = _ref4.buttonSize,\n      theme = _ref4.theme;\n\n  if (mode === ButtonMode.LINK) {\n    return theme.link.sizes[buttonSize];\n  }\n\n  return theme.button.sizes[buttonSize];\n}; // Props that should not be forwarded to the HTML DOM elements\n\nexport var shouldForwardProp = function shouldForwardProp(prop) {\n  return !['mode'].includes(prop);\n};"]},"metadata":{},"sourceType":"module"}