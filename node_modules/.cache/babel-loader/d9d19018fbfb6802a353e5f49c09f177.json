{"ast":null,"code":"var _jsxFileName = \"/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallInformation.js\",\n    _s = $RefreshSig$();\n\nimport API from '../API';\nimport { Divider, Typography, Spacer, Button } from '@aircall/tractor';\nimport AppStyling from '../AppStyling';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(AppStyling);\n\nconst CallInformation = _ref => {\n  _s();\n\n  let {\n    call,\n    token,\n    setCall\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.callInformation,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setCall(false),\n        className: classes.backButton,\n        children: '<---'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n        space: \"xs\",\n        width: \"100% !important\",\n        direction: \"vertical\",\n        justifyItems: \"center\",\n        width: \"30vw\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Call details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"From: \", call.from]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Time: \", call.created_at.slice(0, 19).replace('T', ' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Call Type: \", call.call_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"To: \", call.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Via: \", call.via]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Duration: \", call.duration, \" Seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.archives,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Archived: \", call.is_archived ? 'yes' : 'no']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleArchiveButton(setCall, token, call),\n            className: classes.archiveButton,\n            children: call.is_archived ? 'Unarchive' : 'Archive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\",\n          orientation: \"horizontal\",\n          size: \"2px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.callInformation,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n        space: \"xs\",\n        width: \"100% !important\",\n        direction: \"vertical\",\n        justifyItems: \"center\",\n        width: \"30vw\",\n        children: displayNotes(call.notes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CallInformation, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CallInformation;\n\nconst displayNotes = notes => {\n  console.log(notes.length, notes.length !== 0);\n\n  if (notes.length !== 0) {\n    return notes.map((note, index) => {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        children: [index + 1, \". \", note.content, ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(Typography, {\n      children: \"No notes added\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this);\n  }\n};\n\nconst handleArchiveButton = (setCall, token, call) => {\n  API.archiveCall(token, call.id).then(resp => resp.json()).then(data => {\n    setCall(data);\n  });\n};\n\nexport default CallInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallInformation\");","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallInformation.js"],"names":["API","Divider","Typography","Spacer","Button","AppStyling","makeStyles","useStyles","CallInformation","call","token","setCall","classes","callInformation","backButton","from","created_at","slice","replace","call_type","to","via","duration","archives","is_archived","handleArchiveButton","archiveButton","displayNotes","notes","console","log","length","map","note","index","content","archiveCall","id","then","resp","json","data"],"mappings":"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","sourcesContent":["import API from '../API';\nimport { Divider, Typography, Spacer, Button } from '@aircall/tractor';\n\nimport AppStyling from '../AppStyling';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(AppStyling);\n\nconst CallInformation = ({ call, token, setCall }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.callInformation}>\n        <Button onClick={() => setCall(false)} className={classes.backButton}>\n          {'<---'}\n        </Button>\n        <Spacer\n          space=\"xs\"\n          width=\"100% !important\"\n          direction=\"vertical\"\n          justifyItems=\"center\"\n          width=\"30vw\"\n        >\n          <h2>Call details:</h2>\n          <Typography>From: {call.from}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>\n            Time: {call.created_at.slice(0, 19).replace('T', ' ')}\n          </Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Call Type: {call.call_type}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>To: {call.to}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Via: {call.via}</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <Typography>Duration: {call.duration} Seconds</Typography>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n          <div className={classes.archives}>\n            <Typography>Archived: {call.is_archived ? 'yes' : 'no'}</Typography>\n            <Button\n              onClick={() => handleArchiveButton(setCall, token, call)}\n              className={classes.archiveButton}\n            >\n              {call.is_archived ? 'Unarchive' : 'Archive'}\n            </Button>\n          </div>\n          <Divider className=\"divider\" orientation=\"horizontal\" size=\"2px\" />\n        </Spacer>\n      </div>\n      <div className={classes.callInformation}>\n        <h2>Notes:</h2>\n        <Spacer\n          space=\"xs\"\n          width=\"100% !important\"\n          direction=\"vertical\"\n          justifyItems=\"center\"\n          width=\"30vw\"\n        >\n          {displayNotes(call.notes)}\n        </Spacer>\n      </div>\n    </>\n  );\n};\n\nconst displayNotes = notes => {\n  console.log(notes.length, notes.length !== 0);\n  if (notes.length !== 0) {\n    return notes.map((note, index) => {\n      return (\n        <Typography>\n          {index + 1}. {note.content}{' '}\n        </Typography>\n      );\n    });\n  } else {\n    <Typography>No notes added</Typography>;\n  }\n};\n\nconst handleArchiveButton = (setCall, token, call) => {\n  API.archiveCall(token, call.id)\n    .then(resp => resp.json())\n    .then(data => {\n      setCall(data);\n    });\n};\n\nexport default CallInformation;\n"]},"metadata":{},"sourceType":"module"}