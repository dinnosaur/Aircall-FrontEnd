{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { Typography } from '../../Typography';\nimport { optionLabel } from '../utils'; // show selected value, could be single value or multiple values\n\nexport var ValueContainer = function ValueContainer(_ref) {\n  var value = _ref.value,\n      getOptionLabel = _ref.getOptionLabel;\n  var selectedValueLabel = useMemo(function () {\n    return Array.isArray(value) ? value.map(function (item) {\n      return optionLabel(item, getOptionLabel);\n    }).join(',') : value && optionLabel(value, getOptionLabel);\n  }, [getOptionLabel, value]);\n  return /*#__PURE__*/React.createElement(Typography, {\n    \"data-test\": \"select-value-container\",\n    variant: \"body2\",\n    ellipsis: true\n  }, selectedValueLabel);\n};","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/components/Select/components/ValueContainer.js"],"names":["React","useMemo","Typography","optionLabel","ValueContainer","_ref","value","getOptionLabel","selectedValueLabel","Array","isArray","map","item","join","createElement","variant","ellipsis"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,UAA5B,C,CACA;;AACA,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACxD,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,cAAc,GAAGF,IAAI,CAACE,cAD1B;AAEA,MAAIC,kBAAkB,GAAGP,OAAO,CAAC,YAAY;AAC3C,WAAOQ,KAAK,CAACC,OAAN,CAAcJ,KAAd,IAAuBA,KAAK,CAACK,GAAN,CAAU,UAAUC,IAAV,EAAgB;AACtD,aAAOT,WAAW,CAACS,IAAD,EAAOL,cAAP,CAAlB;AACD,KAF6B,EAE3BM,IAF2B,CAEtB,GAFsB,CAAvB,GAEQP,KAAK,IAAIH,WAAW,CAACG,KAAD,EAAQC,cAAR,CAFnC;AAGD,GAJ+B,EAI7B,CAACA,cAAD,EAAiBD,KAAjB,CAJ6B,CAAhC;AAKA,SAAO,aAAaN,KAAK,CAACc,aAAN,CAAoBZ,UAApB,EAAgC;AAClD,iBAAa,wBADqC;AAElDa,IAAAA,OAAO,EAAE,OAFyC;AAGlDC,IAAAA,QAAQ,EAAE;AAHwC,GAAhC,EAIjBR,kBAJiB,CAApB;AAKD,CAbM","sourcesContent":["import React, { useMemo } from 'react';\nimport { Typography } from '../../Typography';\nimport { optionLabel } from '../utils';\n// show selected value, could be single value or multiple values\nexport var ValueContainer = function ValueContainer(_ref) {\n  var value = _ref.value,\n      getOptionLabel = _ref.getOptionLabel;\n  var selectedValueLabel = useMemo(function () {\n    return Array.isArray(value) ? value.map(function (item) {\n      return optionLabel(item, getOptionLabel);\n    }).join(',') : value && optionLabel(value, getOptionLabel);\n  }, [getOptionLabel, value]);\n  return /*#__PURE__*/React.createElement(Typography, {\n    \"data-test\": \"select-value-container\",\n    variant: \"body2\",\n    ellipsis: true\n  }, selectedValueLabel);\n};"]},"metadata":{},"sourceType":"module"}