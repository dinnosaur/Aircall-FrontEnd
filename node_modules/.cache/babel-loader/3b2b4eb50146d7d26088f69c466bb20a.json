{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nexport var useCloseOnScroll = function useCloseOnScroll(options) {\n  var container = options.container,\n      node = options.node,\n      onClose = options.onClose;\n  /**\n   * Invoke the callback when the user scrolls outside of the node.\n   */\n\n  var handleScroll = useCallback(function (event) {\n    var target = event.target;\n    var hasScrolledInsideOfPortal = node.contains(target);\n\n    if (!hasScrolledInsideOfPortal) {\n      onClose();\n    }\n  }, [node, onClose]);\n  useEffect(function () {\n    if (!node) {\n      return;\n    } // the 3rd option of the addEventListener indicate that the scroll event\n    // will be bubbled upward through the DOM tree\n\n\n    container.addEventListener('scroll', handleScroll, true);\n    return function () {\n      container.removeEventListener('scroll', handleScroll, true);\n    };\n  }, [container, handleScroll, node]);\n};","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/hooks/useCloseOnScroll/useCloseOnScroll.js"],"names":["useCallback","useEffect","useCloseOnScroll","options","container","node","onClose","handleScroll","event","target","hasScrolledInsideOfPortal","contains","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/D,MAAIC,SAAS,GAAGD,OAAO,CAACC,SAAxB;AAAA,MACIC,IAAI,GAAGF,OAAO,CAACE,IADnB;AAAA,MAEIC,OAAO,GAAGH,OAAO,CAACG,OAFtB;AAGA;AACF;AACA;;AAEE,MAAIC,YAAY,GAAGP,WAAW,CAAC,UAAUQ,KAAV,EAAiB;AAC9C,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,QAAIC,yBAAyB,GAAGL,IAAI,CAACM,QAAL,CAAcF,MAAd,CAAhC;;AAEA,QAAI,CAACC,yBAAL,EAAgC;AAC9BJ,MAAAA,OAAO;AACR;AACF,GAP6B,EAO3B,CAACD,IAAD,EAAOC,OAAP,CAP2B,CAA9B;AAQAL,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACI,IAAL,EAAW;AACT;AACD,KAHmB,CAGlB;AACF;;;AAGAD,IAAAA,SAAS,CAACQ,gBAAV,CAA2B,QAA3B,EAAqCL,YAArC,EAAmD,IAAnD;AACA,WAAO,YAAY;AACjBH,MAAAA,SAAS,CAACS,mBAAV,CAA8B,QAA9B,EAAwCN,YAAxC,EAAsD,IAAtD;AACD,KAFD;AAGD,GAXQ,EAWN,CAACH,SAAD,EAAYG,YAAZ,EAA0BF,IAA1B,CAXM,CAAT;AAYD,CA5BM","sourcesContent":["import { useCallback, useEffect } from 'react';\nexport var useCloseOnScroll = function useCloseOnScroll(options) {\n  var container = options.container,\n      node = options.node,\n      onClose = options.onClose;\n  /**\n   * Invoke the callback when the user scrolls outside of the node.\n   */\n\n  var handleScroll = useCallback(function (event) {\n    var target = event.target;\n    var hasScrolledInsideOfPortal = node.contains(target);\n\n    if (!hasScrolledInsideOfPortal) {\n      onClose();\n    }\n  }, [node, onClose]);\n  useEffect(function () {\n    if (!node) {\n      return;\n    } // the 3rd option of the addEventListener indicate that the scroll event\n    // will be bubbled upward through the DOM tree\n\n\n    container.addEventListener('scroll', handleScroll, true);\n    return function () {\n      container.removeEventListener('scroll', handleScroll, true);\n    };\n  }, [container, handleScroll, node]);\n};"]},"metadata":{},"sourceType":"module"}