{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"size\", \"variant\", \"count\", \"maxCount\", \"color\"];\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { color, position } from 'styled-system';\nimport { Flex } from '../Flex';\nimport { Typography } from '../Typography';\nimport { CounterBadgeSize, CounterBadgeVariant } from './CounterBadge.decl';\nimport { makeBadgePosition, makeBadgeSize, makeBadgeVariant, TYPOGRAHY_VARIANTS, TYPOGRAHY_PADDINGS, shouldForwardProp } from './utils';\nvar BadgeIndicator = styled.div.withConfig({\n  shouldForwardProp: shouldForwardProp\n}).withConfig({\n  displayName: \"CounterBadge__BadgeIndicator\",\n  componentId: \"sc-1xfirws-0\"\n})([\"display:inline-flex;align-items:center;justify-content:center;overflow:hidden;\", \" \", \" \", \" \", \"  \", \"\"], makeBadgePosition, makeBadgeVariant, makeBadgeSize, position, color);\nexport var CounterBadge = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? CounterBadgeSize.REGULAR : _ref$size,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? CounterBadgeVariant.DESTRUCTIVE : _ref$variant,\n      count = _ref.count,\n      _ref$maxCount = _ref.maxCount,\n      maxCount = _ref$maxCount === void 0 ? 99 : _ref$maxCount,\n      color = _ref.color,\n      otherStyleProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  /**\n   * Don't show the counter badge if the count is set to 0\n   */\n\n\n  if (count === 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  }\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    display: \"inline-flex\",\n    position: \"relative\",\n    ref: ref\n  }, children, /*#__PURE__*/React.createElement(BadgeIndicator, _extends({\n    size: size,\n    variant: variant,\n    hasChildren: !!children,\n    color: color // This one has issues.\n\n  }, otherStyleProps), /*#__PURE__*/React.createElement(Typography, {\n    variant: TYPOGRAHY_VARIANTS[size],\n    px: count >= 10 ? TYPOGRAHY_PADDINGS[size] : 0,\n    userSelect: \"none\"\n  }, count <= maxCount ? count : maxCount + \"+\")));\n});","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/components/CounterBadge/CounterBadge.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","forwardRef","styled","color","position","Flex","Typography","CounterBadgeSize","CounterBadgeVariant","makeBadgePosition","makeBadgeSize","makeBadgeVariant","TYPOGRAHY_VARIANTS","TYPOGRAHY_PADDINGS","shouldForwardProp","BadgeIndicator","div","withConfig","displayName","componentId","CounterBadge","_ref","ref","children","_ref$size","size","REGULAR","_ref$variant","variant","DESTRUCTIVE","count","_ref$maxCount","maxCount","otherStyleProps","createElement","Fragment","display","hasChildren","px","userSelect"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"size\", \"variant\", \"count\", \"maxCount\", \"color\"];\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { color, position } from 'styled-system';\nimport { Flex } from '../Flex';\nimport { Typography } from '../Typography';\nimport { CounterBadgeSize, CounterBadgeVariant } from './CounterBadge.decl';\nimport { makeBadgePosition, makeBadgeSize, makeBadgeVariant, TYPOGRAHY_VARIANTS, TYPOGRAHY_PADDINGS, shouldForwardProp } from './utils';\nvar BadgeIndicator = styled.div.withConfig({\n  shouldForwardProp: shouldForwardProp\n}).withConfig({\n  displayName: \"CounterBadge__BadgeIndicator\",\n  componentId: \"sc-1xfirws-0\"\n})([\"display:inline-flex;align-items:center;justify-content:center;overflow:hidden;\", \" \", \" \", \" \", \"  \", \"\"], makeBadgePosition, makeBadgeVariant, makeBadgeSize, position, color);\nexport var CounterBadge = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? CounterBadgeSize.REGULAR : _ref$size,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? CounterBadgeVariant.DESTRUCTIVE : _ref$variant,\n      count = _ref.count,\n      _ref$maxCount = _ref.maxCount,\n      maxCount = _ref$maxCount === void 0 ? 99 : _ref$maxCount,\n      color = _ref.color,\n      otherStyleProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  /**\n   * Don't show the counter badge if the count is set to 0\n   */\n  if (count === 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  }\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    display: \"inline-flex\",\n    position: \"relative\",\n    ref: ref\n  }, children, /*#__PURE__*/React.createElement(BadgeIndicator, _extends({\n    size: size,\n    variant: variant,\n    hasChildren: !!children,\n    color: color // This one has issues.\n\n  }, otherStyleProps), /*#__PURE__*/React.createElement(Typography, {\n    variant: TYPOGRAHY_VARIANTS[size],\n    px: count >= 10 ? TYPOGRAHY_PADDINGS[size] : 0,\n    userSelect: \"none\"\n  }, count <= maxCount ? count : maxCount + \"+\")));\n});"]},"metadata":{},"sourceType":"module"}