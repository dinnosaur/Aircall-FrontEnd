{"ast":null,"code":"var _TYPOGRAHY_VARIANTS, _TYPOGRAHY_PADDINGS;\n\nimport { TypographyVariant } from '../Typography';\nimport { CounterBadgeSize } from './CounterBadge.decl';\nexport var makeBadgeVariant = function makeBadgeVariant(_ref) {\n  var variant = _ref.variant,\n      theme = _ref.theme;\n  var variants = {\n    destructive: {\n      backgroundColor: theme.colors.red.base,\n      textColor: theme.colors.base.white\n    },\n    black: {\n      backgroundColor: theme.colors.base.black,\n      textColor: theme.colors.base.white\n    }\n  };\n  var _variants$variant = variants[variant],\n      backgroundColor = _variants$variant.backgroundColor,\n      textColor = _variants$variant.textColor;\n  return {\n    backgroundColor: backgroundColor,\n    color: textColor\n  };\n};\nexport var makeBadgeSize = function makeBadgeSize(_ref2) {\n  var size = _ref2.size,\n      theme = _ref2.theme;\n  var _theme$counterBadge$s = theme.counterBadge.sizes[size],\n      minWidth = _theme$counterBadge$s.minWidth,\n      maxWidth = _theme$counterBadge$s.maxWidth,\n      height = _theme$counterBadge$s.height;\n  return {\n    minWidth: minWidth,\n    maxWidth: maxWidth,\n    height: height,\n    borderRadius: height / 2\n  };\n};\nexport var makeBadgePosition = function makeBadgePosition(_ref3) {\n  var hasChildren = _ref3.hasChildren;\n\n  if (!hasChildren) {\n    return;\n  }\n\n  return {\n    position: 'absolute',\n    right: '-4px',\n    top: '-4px'\n  };\n}; // Props that should not be forwarded to the HTML DOM elements\n\nexport var shouldForwardProp = function shouldForwardProp(prop, defaultValidationFn) {\n  return !['height', 'width', 'color', 'display'].includes(prop) && defaultValidationFn(prop);\n};\nexport var TYPOGRAHY_VARIANTS = (_TYPOGRAHY_VARIANTS = {}, _TYPOGRAHY_VARIANTS[CounterBadgeSize.SMALL] = TypographyVariant.OVERLINE, _TYPOGRAHY_VARIANTS[CounterBadgeSize.REGULAR] = TypographyVariant.CAPTION, _TYPOGRAHY_VARIANTS[CounterBadgeSize.LARGE] = TypographyVariant.CAPTION, _TYPOGRAHY_VARIANTS);\nexport var TYPOGRAHY_PADDINGS = (_TYPOGRAHY_PADDINGS = {}, _TYPOGRAHY_PADDINGS[CounterBadgeSize.SMALL] = '4px', _TYPOGRAHY_PADDINGS[CounterBadgeSize.REGULAR] = '8px', _TYPOGRAHY_PADDINGS[CounterBadgeSize.LARGE] = '8px', _TYPOGRAHY_PADDINGS);","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/components/CounterBadge/utils.js"],"names":["_TYPOGRAHY_VARIANTS","_TYPOGRAHY_PADDINGS","TypographyVariant","CounterBadgeSize","makeBadgeVariant","_ref","variant","theme","variants","destructive","backgroundColor","colors","red","base","textColor","white","black","_variants$variant","color","makeBadgeSize","_ref2","size","_theme$counterBadge$s","counterBadge","sizes","minWidth","maxWidth","height","borderRadius","makeBadgePosition","_ref3","hasChildren","position","right","top","shouldForwardProp","prop","defaultValidationFn","includes","TYPOGRAHY_VARIANTS","SMALL","OVERLINE","REGULAR","CAPTION","LARGE","TYPOGRAHY_PADDINGS"],"mappings":"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","sourcesContent":["var _TYPOGRAHY_VARIANTS, _TYPOGRAHY_PADDINGS;\n\nimport { TypographyVariant } from '../Typography';\nimport { CounterBadgeSize } from './CounterBadge.decl';\nexport var makeBadgeVariant = function makeBadgeVariant(_ref) {\n  var variant = _ref.variant,\n      theme = _ref.theme;\n  var variants = {\n    destructive: {\n      backgroundColor: theme.colors.red.base,\n      textColor: theme.colors.base.white\n    },\n    black: {\n      backgroundColor: theme.colors.base.black,\n      textColor: theme.colors.base.white\n    }\n  };\n  var _variants$variant = variants[variant],\n      backgroundColor = _variants$variant.backgroundColor,\n      textColor = _variants$variant.textColor;\n  return {\n    backgroundColor: backgroundColor,\n    color: textColor\n  };\n};\nexport var makeBadgeSize = function makeBadgeSize(_ref2) {\n  var size = _ref2.size,\n      theme = _ref2.theme;\n  var _theme$counterBadge$s = theme.counterBadge.sizes[size],\n      minWidth = _theme$counterBadge$s.minWidth,\n      maxWidth = _theme$counterBadge$s.maxWidth,\n      height = _theme$counterBadge$s.height;\n  return {\n    minWidth: minWidth,\n    maxWidth: maxWidth,\n    height: height,\n    borderRadius: height / 2\n  };\n};\nexport var makeBadgePosition = function makeBadgePosition(_ref3) {\n  var hasChildren = _ref3.hasChildren;\n\n  if (!hasChildren) {\n    return;\n  }\n\n  return {\n    position: 'absolute',\n    right: '-4px',\n    top: '-4px'\n  };\n}; // Props that should not be forwarded to the HTML DOM elements\n\nexport var shouldForwardProp = function shouldForwardProp(prop, defaultValidationFn) {\n  return !['height', 'width', 'color', 'display'].includes(prop) && defaultValidationFn(prop);\n};\nexport var TYPOGRAHY_VARIANTS = (_TYPOGRAHY_VARIANTS = {}, _TYPOGRAHY_VARIANTS[CounterBadgeSize.SMALL] = TypographyVariant.OVERLINE, _TYPOGRAHY_VARIANTS[CounterBadgeSize.REGULAR] = TypographyVariant.CAPTION, _TYPOGRAHY_VARIANTS[CounterBadgeSize.LARGE] = TypographyVariant.CAPTION, _TYPOGRAHY_VARIANTS);\nexport var TYPOGRAHY_PADDINGS = (_TYPOGRAHY_PADDINGS = {}, _TYPOGRAHY_PADDINGS[CounterBadgeSize.SMALL] = '4px', _TYPOGRAHY_PADDINGS[CounterBadgeSize.REGULAR] = '8px', _TYPOGRAHY_PADDINGS[CounterBadgeSize.LARGE] = '8px', _TYPOGRAHY_PADDINGS);"]},"metadata":{},"sourceType":"module"}