{"ast":null,"code":"import { SpacerDirection } from './Spacer.decl';\nexport var getMarginPropName = function getMarginPropName(_ref) {\n  var direction = _ref.direction,\n      reverse = _ref.reverse;\n  return \"m\" + (direction === SpacerDirection.VERTICAL ? reverse ? 't' : 'b' : reverse ? 'l' : 'r');\n};\nexport var getPaddingPropName = function getPaddingPropName(_ref2) {\n  var reverse = _ref2.reverse;\n  return \"p\" + (reverse ? 't' : 'b');\n};\nexport var getChildStyle = function getChildStyle(_ref3) {\n  var direction = _ref3.direction,\n      reverse = _ref3.reverse,\n      childIdx = _ref3.childIdx,\n      childrenCount = _ref3.childrenCount,\n      space = _ref3.space,\n      wrapSpace = _ref3.wrapSpace,\n      flexWrap = _ref3.flexWrap,\n      itemsSized = _ref3.itemsSized;\n  var boxProps = itemsSized === 'auto' ? {} : {\n    flex: '1 1 0'\n  };\n  var marginProp = getMarginPropName({\n    direction: direction,\n    reverse: reverse\n  });\n  var paddingProp = getPaddingPropName({\n    reverse: reverse\n  });\n  var isLastChild = childIdx === childrenCount - 1; // apply a margin only if the child is not the last one\n\n  if (!isLastChild) {\n    boxProps[marginProp] = space != null ? space : 'xxxs';\n  } // Flex wrap only supports wrapping on multiple lines (and not multiple columns)\n\n\n  if (flexWrap && direction === SpacerDirection.HORIZONTAL) {\n    boxProps[paddingProp] = wrapSpace != null ? wrapSpace : 'xxxs';\n  }\n\n  return boxProps;\n}; // Props that should not be forwarded to the HTML DOM elements\n\nexport var shouldForwardProp = function shouldForwardProp(prop, defaultValidationFn) {\n  return !['direction'].includes(prop) && defaultValidationFn(prop);\n};","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/components/Spacer/utils.js"],"names":["SpacerDirection","getMarginPropName","_ref","direction","reverse","VERTICAL","getPaddingPropName","_ref2","getChildStyle","_ref3","childIdx","childrenCount","space","wrapSpace","flexWrap","itemsSized","boxProps","flex","marginProp","paddingProp","isLastChild","HORIZONTAL","shouldForwardProp","prop","defaultValidationFn","includes"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AACA,OAAO,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC9D,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAEA,SAAO,OAAOD,SAAS,KAAKH,eAAe,CAACK,QAA9B,GAAyCD,OAAO,GAAG,GAAH,GAAS,GAAzD,GAA+DA,OAAO,GAAG,GAAH,GAAS,GAAtF,CAAP;AACD,CAJM;AAKP,OAAO,IAAIE,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACjE,MAAIH,OAAO,GAAGG,KAAK,CAACH,OAApB;AACA,SAAO,OAAOA,OAAO,GAAG,GAAH,GAAS,GAAvB,CAAP;AACD,CAHM;AAIP,OAAO,IAAII,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACvD,MAAIN,SAAS,GAAGM,KAAK,CAACN,SAAtB;AAAA,MACIC,OAAO,GAAGK,KAAK,CAACL,OADpB;AAAA,MAEIM,QAAQ,GAAGD,KAAK,CAACC,QAFrB;AAAA,MAGIC,aAAa,GAAGF,KAAK,CAACE,aAH1B;AAAA,MAIIC,KAAK,GAAGH,KAAK,CAACG,KAJlB;AAAA,MAKIC,SAAS,GAAGJ,KAAK,CAACI,SALtB;AAAA,MAMIC,QAAQ,GAAGL,KAAK,CAACK,QANrB;AAAA,MAOIC,UAAU,GAAGN,KAAK,CAACM,UAPvB;AAQA,MAAIC,QAAQ,GAAGD,UAAU,KAAK,MAAf,GAAwB,EAAxB,GAA6B;AAC1CE,IAAAA,IAAI,EAAE;AADoC,GAA5C;AAGA,MAAIC,UAAU,GAAGjB,iBAAiB,CAAC;AACjCE,IAAAA,SAAS,EAAEA,SADsB;AAEjCC,IAAAA,OAAO,EAAEA;AAFwB,GAAD,CAAlC;AAIA,MAAIe,WAAW,GAAGb,kBAAkB,CAAC;AACnCF,IAAAA,OAAO,EAAEA;AAD0B,GAAD,CAApC;AAGA,MAAIgB,WAAW,GAAGV,QAAQ,KAAKC,aAAa,GAAG,CAA/C,CAnBuD,CAmBL;;AAElD,MAAI,CAACS,WAAL,EAAkB;AAChBJ,IAAAA,QAAQ,CAACE,UAAD,CAAR,GAAuBN,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,MAA/C;AACD,GAvBsD,CAuBrD;;;AAGF,MAAIE,QAAQ,IAAIX,SAAS,KAAKH,eAAe,CAACqB,UAA9C,EAA0D;AACxDL,IAAAA,QAAQ,CAACG,WAAD,CAAR,GAAwBN,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgC,MAAxD;AACD;;AAED,SAAOG,QAAP;AACD,CA/BM,C,CA+BJ;;AAEH,OAAO,IAAIM,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiCC,mBAAjC,EAAsD;AACnF,SAAO,CAAC,CAAC,WAAD,EAAcC,QAAd,CAAuBF,IAAvB,CAAD,IAAiCC,mBAAmB,CAACD,IAAD,CAA3D;AACD,CAFM","sourcesContent":["import { SpacerDirection } from './Spacer.decl';\nexport var getMarginPropName = function getMarginPropName(_ref) {\n  var direction = _ref.direction,\n      reverse = _ref.reverse;\n  return \"m\" + (direction === SpacerDirection.VERTICAL ? reverse ? 't' : 'b' : reverse ? 'l' : 'r');\n};\nexport var getPaddingPropName = function getPaddingPropName(_ref2) {\n  var reverse = _ref2.reverse;\n  return \"p\" + (reverse ? 't' : 'b');\n};\nexport var getChildStyle = function getChildStyle(_ref3) {\n  var direction = _ref3.direction,\n      reverse = _ref3.reverse,\n      childIdx = _ref3.childIdx,\n      childrenCount = _ref3.childrenCount,\n      space = _ref3.space,\n      wrapSpace = _ref3.wrapSpace,\n      flexWrap = _ref3.flexWrap,\n      itemsSized = _ref3.itemsSized;\n  var boxProps = itemsSized === 'auto' ? {} : {\n    flex: '1 1 0'\n  };\n  var marginProp = getMarginPropName({\n    direction: direction,\n    reverse: reverse\n  });\n  var paddingProp = getPaddingPropName({\n    reverse: reverse\n  });\n  var isLastChild = childIdx === childrenCount - 1; // apply a margin only if the child is not the last one\n\n  if (!isLastChild) {\n    boxProps[marginProp] = space != null ? space : 'xxxs';\n  } // Flex wrap only supports wrapping on multiple lines (and not multiple columns)\n\n\n  if (flexWrap && direction === SpacerDirection.HORIZONTAL) {\n    boxProps[paddingProp] = wrapSpace != null ? wrapSpace : 'xxxs';\n  }\n\n  return boxProps;\n}; // Props that should not be forwarded to the HTML DOM elements\n\nexport var shouldForwardProp = function shouldForwardProp(prop, defaultValidationFn) {\n  return !['direction'].includes(prop) && defaultValidationFn(prop);\n};"]},"metadata":{},"sourceType":"module"}