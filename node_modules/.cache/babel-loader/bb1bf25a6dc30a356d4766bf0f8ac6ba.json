{"ast":null,"code":"var _jsxFileName = \"/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallList.js\",\n    _s = $RefreshSig$();\n\nimport API from '../API';\nimport { useEffect, useState } from 'react';\nimport { Button, Spacer, CallFilled, Typography, Divider } from '@aircall/tractor';\nimport AppStyling from '../AppStyling';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@mui/material/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(AppStyling);\n\nconst CallList = _ref => {\n  _s();\n\n  let {\n    token,\n    page\n  } = _ref;\n  const classes = useStyles();\n  const [calls, setCalls] = useState([]);\n  useEffect(() => {\n    sortbyDate();\n    API.getCalls(token, page).then(resp => resp.json()).then(data => {\n      console.log(data);\n      setCalls(data);\n    });\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.callListContainer,\n      children: /*#__PURE__*/_jsxDEV(Spacer, {\n        space: \"s\",\n        width: \"100% !important\",\n        direction: \"vertical\",\n        children: displayCalls(sortbydate(calls.nodes), classes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: 9,\n      defaultPage: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CallList, \"Fk002/PIiwOnYkqVKbis6W4iDkU=\", false, function () {\n  return [useStyles];\n});\n\n_c = CallList;\n\nconst displayCalls = (calls, classes) => {\n  console.log(calls);\n\n  if (calls !== undefined && calls.length > 1) {\n    return calls.map(call => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.call,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: [/*#__PURE__*/_jsxDEV(CallFilled, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), call.from]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: \"divider\",\n            orientation: \"vertical\",\n            size: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"callDate\",\n            children: call.created_at.slice(0, 19).replace('T', ' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    });\n  }\n};\n\nconst sortbyDate = calls => {\n  if (calls !== undefined) {\n    return calls.sort((a, b) => Date.parse(b.created_at) - Date.parse(a.created_at));\n  }\n};\n\nexport default CallList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallList\");","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/src/Components/CallList.js"],"names":["API","useEffect","useState","Button","Spacer","CallFilled","Typography","Divider","AppStyling","makeStyles","Pagination","useStyles","CallList","token","page","classes","calls","setCalls","sortbyDate","getCalls","then","resp","json","data","console","log","callListContainer","displayCalls","sortbydate","nodes","undefined","length","map","call","from","created_at","slice","replace","sort","a","b","Date","parse"],"mappings":"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","sourcesContent":["import API from '../API';\nimport { useEffect, useState } from 'react';\nimport {\n  Button,\n  Spacer,\n  CallFilled,\n  Typography,\n  Divider\n} from '@aircall/tractor';\n\nimport AppStyling from '../AppStyling';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@mui/material/Pagination';\n\nconst useStyles = makeStyles(AppStyling);\n\nconst CallList = ({ token, page }) => {\n  const classes = useStyles();\n  const [calls, setCalls] = useState([]);\n\n  useEffect(() => {\n    sortbyDate();\n    API.getCalls(token, page)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        setCalls(data);\n      });\n  }, [token]);\n\n  return (\n    <>\n      <div className={classes.callListContainer}>\n        <Spacer space=\"s\" width=\"100% !important\" direction=\"vertical\">\n          {displayCalls(sortbydate(calls.nodes), classes)}\n        </Spacer>\n      </div>\n      <Pagination count={9} defaultPage={1} />\n    </>\n  );\n};\n\nconst displayCalls = (calls, classes) => {\n  console.log(calls);\n  if (calls !== undefined && calls.length > 1) {\n    return calls.map(call => {\n      return (\n        <>\n          <div className={classes.call}>\n            <Button>\n              <CallFilled />\n              {call.from}\n            </Button>\n            <Divider className=\"divider\" orientation=\"vertical\" size=\"4px\" />\n            <Typography className=\"callDate\">\n              {call.created_at.slice(0, 19).replace('T', ' ')}\n            </Typography>\n          </div>\n        </>\n      );\n    });\n  }\n};\n\nconst sortbyDate = calls => {\n  if (calls !== undefined) {\n    return calls.sort(\n      (a, b) => Date.parse(b.created_at) - Date.parse(a.created_at)\n    );\n  }\n};\n\nexport default CallList;\n"]},"metadata":{},"sourceType":"module"}