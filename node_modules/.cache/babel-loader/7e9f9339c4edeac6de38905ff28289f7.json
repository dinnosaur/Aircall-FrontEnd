{"ast":null,"code":"import React, { useCallback, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { color } from 'styled-system';\nimport { useTrigger } from '../../hooks/useTrigger';\nimport { BoundaryAlignment } from '../BoundaryAlignment';\nimport { Box } from '../Box';\nimport { Typography } from '../Typography';\nimport { getCaretOffset, makeCaretOffset } from './utils';\nvar TooltipContainer = styled(Box).withConfig({\n  displayName: \"Tooltip__TooltipContainer\",\n  componentId: \"sc-8z4rfs-0\"\n})([\":before{content:'';display:block;width:5px;height:5px;position:absolute;transform:translateX(-50%) translateY(-50%) rotate(45deg);\", \" \", \"}\"], color, makeCaretOffset);\nexport var Tooltip = function Tooltip(_ref) {\n  var title = _ref.title,\n      content = _ref.content,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? 'top' : _ref$position,\n      _ref$anchor = _ref.anchor,\n      anchor = _ref$anchor === void 0 ? 'center' : _ref$anchor,\n      _ref$mouseEnterDelay = _ref.mouseEnterDelay,\n      mouseEnterDelay = _ref$mouseEnterDelay === void 0 ? 0 : _ref$mouseEnterDelay,\n      _ref$mouseLeaveDelay = _ref.mouseLeaveDelay,\n      mouseLeaveDelay = _ref$mouseLeaveDelay === void 0 ? 100 : _ref$mouseLeaveDelay,\n      _ref$maxWidth = _ref.maxWidth,\n      maxWidth = _ref$maxWidth === void 0 ? '250px' : _ref$maxWidth,\n      visible = _ref.visible,\n      children = _ref.children,\n      _ref$caretPointsAtCen = _ref.caretPointsAtCenter,\n      caretPointsAtCenter = _ref$caretPointsAtCen === void 0 ? false : _ref$caretPointsAtCen,\n      body = _ref.body,\n      portalContainer = _ref.portalContainer;\n\n  var _useState = useState(position),\n      internalPosition = _useState[0],\n      setInternalPosition = _useState[1];\n\n  var _useState2 = useState(anchor),\n      internalAnchor = _useState2[0],\n      setInternalAnchor = _useState2[1];\n\n  var child = React.Children.only(children);\n\n  var _useTrigger = useTrigger(child, {\n    trigger: 'hover',\n    mouseEnterDelay: mouseEnterDelay,\n    mouseLeaveDelay: mouseLeaveDelay,\n    visible: visible,\n    body: body,\n    portalContainer: portalContainer\n  }),\n      trigger = _useTrigger[0],\n      _useTrigger$ = _useTrigger[1],\n      isVisible = _useTrigger$.isVisible,\n      containerBoundingBox = _useTrigger$.containerBoundingBox,\n      portal = _useTrigger$.portal,\n      close = _useTrigger$.close,\n      cancelClose = _useTrigger$.cancelClose;\n\n  var handleComputePlacement = useCallback(function (placements) {\n    // We need to make sure that the internal tooltip position is the same one defined on the Overlay.\n    // So that we could react to placements changes and recompute the caret offsets.\n    setInternalPosition(placements.position);\n    setInternalAnchor(placements.anchor);\n  }, []);\n  var tooltipContent = useMemo(function () {\n    return title ? /*#__PURE__*/React.createElement(Typography, {\n      color: \"text.lighter\",\n      variant: \"body2\",\n      \"data-test\": \"tooltip-title\"\n    }, title) : content;\n  }, [title, content]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, trigger, isVisible && portal( /*#__PURE__*/React.createElement(BoundaryAlignment, {\n    containerBoundingBox: containerBoundingBox,\n    position: position,\n    anchor: anchor,\n    offset: getCaretOffset(position),\n    onComputePlacement: handleComputePlacement,\n    onMouseEnter: cancelClose,\n    onMouseLeave: close\n  }, /*#__PURE__*/React.createElement(TooltipContainer, {\n    tooltipPosition: internalPosition,\n    tooltipAnchor: internalAnchor,\n    caretPointsAtCenter: caretPointsAtCenter,\n    containerBoundingBox: containerBoundingBox,\n    bg: \"text.base\",\n    borderRadius: 8,\n    p: 2,\n    boxShadow: 1,\n    maxWidth: maxWidth,\n    \"data-test\": \"tooltip-content\"\n  }, tooltipContent))));\n};","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/components/Tooltip/Tooltip.js"],"names":["React","useCallback","useMemo","useState","styled","color","useTrigger","BoundaryAlignment","Box","Typography","getCaretOffset","makeCaretOffset","TooltipContainer","withConfig","displayName","componentId","Tooltip","_ref","title","content","_ref$position","position","_ref$anchor","anchor","_ref$mouseEnterDelay","mouseEnterDelay","_ref$mouseLeaveDelay","mouseLeaveDelay","_ref$maxWidth","maxWidth","visible","children","_ref$caretPointsAtCen","caretPointsAtCenter","body","portalContainer","_useState","internalPosition","setInternalPosition","_useState2","internalAnchor","setInternalAnchor","child","Children","only","_useTrigger","trigger","_useTrigger$","isVisible","containerBoundingBox","portal","close","cancelClose","handleComputePlacement","placements","tooltipContent","createElement","variant","Fragment","offset","onComputePlacement","onMouseEnter","onMouseLeave","tooltipPosition","tooltipAnchor","bg","borderRadius","p","boxShadow"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { color } from 'styled-system';\nimport { useTrigger } from '../../hooks/useTrigger';\nimport { BoundaryAlignment } from '../BoundaryAlignment';\nimport { Box } from '../Box';\nimport { Typography } from '../Typography';\nimport { getCaretOffset, makeCaretOffset } from './utils';\nvar TooltipContainer = styled(Box).withConfig({\n  displayName: \"Tooltip__TooltipContainer\",\n  componentId: \"sc-8z4rfs-0\"\n})([\":before{content:'';display:block;width:5px;height:5px;position:absolute;transform:translateX(-50%) translateY(-50%) rotate(45deg);\", \" \", \"}\"], color, makeCaretOffset);\nexport var Tooltip = function Tooltip(_ref) {\n  var title = _ref.title,\n      content = _ref.content,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? 'top' : _ref$position,\n      _ref$anchor = _ref.anchor,\n      anchor = _ref$anchor === void 0 ? 'center' : _ref$anchor,\n      _ref$mouseEnterDelay = _ref.mouseEnterDelay,\n      mouseEnterDelay = _ref$mouseEnterDelay === void 0 ? 0 : _ref$mouseEnterDelay,\n      _ref$mouseLeaveDelay = _ref.mouseLeaveDelay,\n      mouseLeaveDelay = _ref$mouseLeaveDelay === void 0 ? 100 : _ref$mouseLeaveDelay,\n      _ref$maxWidth = _ref.maxWidth,\n      maxWidth = _ref$maxWidth === void 0 ? '250px' : _ref$maxWidth,\n      visible = _ref.visible,\n      children = _ref.children,\n      _ref$caretPointsAtCen = _ref.caretPointsAtCenter,\n      caretPointsAtCenter = _ref$caretPointsAtCen === void 0 ? false : _ref$caretPointsAtCen,\n      body = _ref.body,\n      portalContainer = _ref.portalContainer;\n\n  var _useState = useState(position),\n      internalPosition = _useState[0],\n      setInternalPosition = _useState[1];\n\n  var _useState2 = useState(anchor),\n      internalAnchor = _useState2[0],\n      setInternalAnchor = _useState2[1];\n\n  var child = React.Children.only(children);\n\n  var _useTrigger = useTrigger(child, {\n    trigger: 'hover',\n    mouseEnterDelay: mouseEnterDelay,\n    mouseLeaveDelay: mouseLeaveDelay,\n    visible: visible,\n    body: body,\n    portalContainer: portalContainer\n  }),\n      trigger = _useTrigger[0],\n      _useTrigger$ = _useTrigger[1],\n      isVisible = _useTrigger$.isVisible,\n      containerBoundingBox = _useTrigger$.containerBoundingBox,\n      portal = _useTrigger$.portal,\n      close = _useTrigger$.close,\n      cancelClose = _useTrigger$.cancelClose;\n\n  var handleComputePlacement = useCallback(function (placements) {\n    // We need to make sure that the internal tooltip position is the same one defined on the Overlay.\n    // So that we could react to placements changes and recompute the caret offsets.\n    setInternalPosition(placements.position);\n    setInternalAnchor(placements.anchor);\n  }, []);\n  var tooltipContent = useMemo(function () {\n    return title ? /*#__PURE__*/React.createElement(Typography, {\n      color: \"text.lighter\",\n      variant: \"body2\",\n      \"data-test\": \"tooltip-title\"\n    }, title) : content;\n  }, [title, content]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, trigger, isVisible && portal( /*#__PURE__*/React.createElement(BoundaryAlignment, {\n    containerBoundingBox: containerBoundingBox,\n    position: position,\n    anchor: anchor,\n    offset: getCaretOffset(position),\n    onComputePlacement: handleComputePlacement,\n    onMouseEnter: cancelClose,\n    onMouseLeave: close\n  }, /*#__PURE__*/React.createElement(TooltipContainer, {\n    tooltipPosition: internalPosition,\n    tooltipAnchor: internalAnchor,\n    caretPointsAtCenter: caretPointsAtCenter,\n    containerBoundingBox: containerBoundingBox,\n    bg: \"text.base\",\n    borderRadius: 8,\n    p: 2,\n    boxShadow: 1,\n    maxWidth: maxWidth,\n    \"data-test\": \"tooltip-content\"\n  }, tooltipContent))));\n};"]},"metadata":{},"sourceType":"module"}