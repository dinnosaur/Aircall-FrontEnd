{"ast":null,"code":"import React from 'react';\nimport { merge } from 'lodash-es';\nimport { ThemeProvider as BaseThemeProvider } from 'styled-components';\nimport baseTheme from './theme';\n\nvar ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children,\n      theme = _ref.theme;\n  var mergedTheme = mergeTheme(theme);\n  return /*#__PURE__*/React.createElement(BaseThemeProvider, {\n    theme: mergedTheme\n  }, children);\n};\n\nvar mergeTheme = function mergeTheme(theme) {\n  if (!theme) {\n    return baseTheme;\n  }\n\n  if (typeof theme === 'function') {\n    return theme(baseTheme);\n  }\n\n  return merge({}, baseTheme, theme);\n};\n\nexport default ThemeProvider;","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/styles/ThemeProvider.js"],"names":["React","merge","ThemeProvider","BaseThemeProvider","baseTheme","_ref","children","theme","mergedTheme","mergeTheme","createElement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,aAAa,IAAIC,iBAA1B,QAAmD,mBAAnD;AACA,OAAOC,SAAP,MAAsB,SAAtB;;AAEA,IAAIF,aAAa,GAAG,SAASA,aAAT,CAAuBG,IAAvB,EAA6B;AAC/C,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAEA,MAAIC,WAAW,GAAGC,UAAU,CAACF,KAAD,CAA5B;AACA,SAAO,aAAaP,KAAK,CAACU,aAAN,CAAoBP,iBAApB,EAAuC;AACzDI,IAAAA,KAAK,EAAEC;AADkD,GAAvC,EAEjBF,QAFiB,CAApB;AAGD,CAPD;;AASA,IAAIG,UAAU,GAAG,SAASA,UAAT,CAAoBF,KAApB,EAA2B;AAC1C,MAAI,CAACA,KAAL,EAAY;AACV,WAAOH,SAAP;AACD;;AAED,MAAI,OAAOG,KAAP,KAAiB,UAArB,EAAiC;AAC/B,WAAOA,KAAK,CAACH,SAAD,CAAZ;AACD;;AAED,SAAOH,KAAK,CAAC,EAAD,EAAKG,SAAL,EAAgBG,KAAhB,CAAZ;AACD,CAVD;;AAYA,eAAeL,aAAf","sourcesContent":["import React from 'react';\nimport { merge } from 'lodash-es';\nimport { ThemeProvider as BaseThemeProvider } from 'styled-components';\nimport baseTheme from './theme';\n\nvar ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children,\n      theme = _ref.theme;\n  var mergedTheme = mergeTheme(theme);\n  return /*#__PURE__*/React.createElement(BaseThemeProvider, {\n    theme: mergedTheme\n  }, children);\n};\n\nvar mergeTheme = function mergeTheme(theme) {\n  if (!theme) {\n    return baseTheme;\n  }\n\n  if (typeof theme === 'function') {\n    return theme(baseTheme);\n  }\n\n  return merge({}, baseTheme, theme);\n};\n\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}