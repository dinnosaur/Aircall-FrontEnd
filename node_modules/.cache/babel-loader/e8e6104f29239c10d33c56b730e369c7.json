{"ast":null,"code":"import { css } from 'styled-components';\nimport { fromTheme } from '../../utils'; // Props that should not be forwarded to the HTML DOM elements\n\nexport var shouldForwardProp = function shouldForwardProp(prop, defaultValidationFn) {\n  return !['color', 'opacity', 'bg', 'backgroundColor', 'fontWeight'].includes(prop) && defaultValidationFn(prop);\n};\nexport var makeEllipsis = function makeEllipsis(_ref) {\n  var ellipsis = _ref.ellipsis;\n\n  if (!ellipsis) {\n    return null;\n  }\n\n  var maxWidth = typeof ellipsis === 'object' && ellipsis.maxWidth || '100%';\n  var lineClamp = typeof ellipsis === 'object' && ellipsis.lines;\n  return css([\"\", \" overflow:hidden;text-overflow:ellipsis;max-width:\", \";\"], lineClamp ? \"\\n      -webkit-box-orient: vertical;\\n      -webkit-line-clamp: \" + lineClamp + \";\\n      display: -webkit-box;\\n    \" : \"\\n      white-space: nowrap;\\n    \", maxWidth);\n};\nexport var makeTypographyVariant = function makeTypographyVariant(_ref2) {\n  var variant = _ref2.variant;\n  return css([\"\", \"\"], fromTheme(\"typography.variants.\" + variant));\n};","map":{"version":3,"sources":["/Users/dinnosivagnanam/Development/Aircall-FrontEnd/node_modules/@aircall/tractor/es/components/Typography/utils.js"],"names":["css","fromTheme","shouldForwardProp","prop","defaultValidationFn","includes","makeEllipsis","_ref","ellipsis","maxWidth","lineClamp","lines","makeTypographyVariant","_ref2","variant"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AACA,OAAO,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiCC,mBAAjC,EAAsD;AACnF,SAAO,CAAC,CAAC,OAAD,EAAU,SAAV,EAAqB,IAArB,EAA2B,iBAA3B,EAA8C,YAA9C,EAA4DC,QAA5D,CAAqEF,IAArE,CAAD,IAA+EC,mBAAmB,CAACD,IAAD,CAAzG;AACD,CAFM;AAGP,OAAO,IAAIG,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AACpD,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;;AAEA,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,MAAIC,QAAQ,GAAG,OAAOD,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACC,QAAzC,IAAqD,MAApE;AACA,MAAIC,SAAS,GAAG,OAAOF,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACG,KAAzD;AACA,SAAOX,GAAG,CAAC,CAAC,EAAD,EAAK,oDAAL,EAA2D,GAA3D,CAAD,EAAkEU,SAAS,GAAG,sEAAsEA,SAAtE,GAAkF,sCAArF,GAA8H,oCAAzM,EAA+OD,QAA/O,CAAV;AACD,CAVM;AAWP,OAAO,IAAIG,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,KAA/B,EAAsC;AACvE,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AACA,SAAOd,GAAG,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAWC,SAAS,CAAC,yBAAyBa,OAA1B,CAApB,CAAV;AACD,CAHM","sourcesContent":["import { css } from 'styled-components';\nimport { fromTheme } from '../../utils';\n// Props that should not be forwarded to the HTML DOM elements\nexport var shouldForwardProp = function shouldForwardProp(prop, defaultValidationFn) {\n  return !['color', 'opacity', 'bg', 'backgroundColor', 'fontWeight'].includes(prop) && defaultValidationFn(prop);\n};\nexport var makeEllipsis = function makeEllipsis(_ref) {\n  var ellipsis = _ref.ellipsis;\n\n  if (!ellipsis) {\n    return null;\n  }\n\n  var maxWidth = typeof ellipsis === 'object' && ellipsis.maxWidth || '100%';\n  var lineClamp = typeof ellipsis === 'object' && ellipsis.lines;\n  return css([\"\", \" overflow:hidden;text-overflow:ellipsis;max-width:\", \";\"], lineClamp ? \"\\n      -webkit-box-orient: vertical;\\n      -webkit-line-clamp: \" + lineClamp + \";\\n      display: -webkit-box;\\n    \" : \"\\n      white-space: nowrap;\\n    \", maxWidth);\n};\nexport var makeTypographyVariant = function makeTypographyVariant(_ref2) {\n  var variant = _ref2.variant;\n  return css([\"\", \"\"], fromTheme(\"typography.variants.\" + variant));\n};"]},"metadata":{},"sourceType":"module"}